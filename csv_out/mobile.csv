id,type,attack_id,attack_name,attack_description
attack-pattern--00290ac5-551e-44aa-bbd8-c4b913488a6d,['mobile-attack'],['T1603'],Scheduled Task/Job,adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code  on android and ios  apis and libraries exist to facilitate scheduling tasks to execute at a specified date  time  or interval_  on android  the  workmanager  api allows asynchronous tasks to be scheduled with the system   workmanager  was introduced to unify task scheduling on android  using  jobscheduler    gcmnetworkmanager   and  alarmmanager  internally   workmanager  offers a lot of flexibility for scheduling  including periodically  one time  or constraint based  e_g  only when the device is charging _ citation  android workmanager   on ios  the  nsbackgroundactivityscheduler  api allows asynchronous tasks to be scheduled with the system  the tasks can be scheduled to be repeating or non repeating  however  the system chooses when the tasks will be executed  the app can choose the interval for repeating tasks  or the delay between scheduling and execution for one time tasks_ citation  apple nsbackgroundactivityscheduler 
attack-pattern--039bc59c-ecc7-4997-b2b4-4ab728bd91aa,['mobile-attack'],['T1540'],Code Injection,adversaries may use code injection attacks to implant arbitrary code into the address space of a running application  code is then executed or interpreted by that application  adversaries utilizing this technique may exploit capabilities to load code in at runtime through dynamic libraries_  with root access   ptrace  can be used to target specific applications and load shared libraries into its process memory_ citation  shunix code injection mar       citation  fadeev code injection aug       by injecting code  an adversary may be able to gain access to higher permissions held by the targeted application by executing as the targeted application  in addition  the adversary may be able to evade detection or enable persistent access to a system under the guise of the application s process_ citation  google triada june      
attack-pattern--08e22979-d320-48ed-8711-e7bf94aabb13,['mobile-attack'],"['T1638', 'CEL-3', 'APP-0', 'APP-1', 'APP-8', 'ECO-12']",Adversary-in-the-Middle,adversaries may attempt to position themselves between two or more networked devices to support follow on behaviors such as  transmitted data  or  endpoint denial of         can be achieved through several mechanisms  such as a malicious application registering itself as a vpn client  by doing this  the adversary can effectively redirect device traffic to wherever they want  however  registering as a vpn client requires user consent on both android and ios  additionally  on ios  the application requires a special entitlement that must be granted by apple  alternatively  if an application is able to escalate privileges  it can potentially utilize those privileges to gain access to network traffic        outside of a mobile device  adversaries may be able to capture traffic by employing a rogue base station or wi fi access point  these devices will allow adversaries to capture network traffic after it has left the device  while it is flowing to its destination  on a local network  enterprise techniques could be used  such as dns redirection or dns poisoning        if applications properly encrypt their network traffic  sensitive data may not be accessible an adversary  depending on the point of capture 
attack-pattern--08ea902d-ecb5-47ed-a453-2798057bb2d3,['mobile-attack'],"['T1626', 'APP-22']",Abuse Elevation Control Mechanism,adversaries may circumvent mechanisms designed to control elevated privileges to gain higher level permissions  most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can gain on a machine  authorization has to be granted to specific users in order to perform tasks that are designated as higher risk  an adversary can use several methods to take advantage of built in control mechanisms in order to escalate privileges on a system 
attack-pattern--0bcc4ec1-a897-49a9-a9ff-c00df1d1209d,['mobile-attack'],['T1454'],Malicious SMS Message,test
attack-pattern--0c71033e-401e-4b97-9309-7a7c95e43a5d,['mobile-attack'],"['T1470', 'ECO-0', 'ECO-1']",Obtain Device Cloud Backups,an adversary who is able to obtain unauthorized access to or misuse authorized access to cloud backup services  e_g  google's android backup service or apple's icloud  could use that access to obtain sensitive data stored in device backups  for example  the elcomsoft phone breaker product advertises the ability to retrieve ios backup data from apple's icloud   elcomsoft also describes  obtaining whatsapp communication histories from backups stored in icloud 
attack-pattern--0cdd66ad-26ac-4338-a764-4972a1e17ee3,['mobile-attack'],"['T1630.001', 'APP-43']",Uninstall Malicious Application,adversaries may include functionality in malware that uninstalls the malicious application from the device  this can be achieved by       abusing device owner permissions to perform silent uninstallation using device owner api calls     abusing root permissions to delete files from the filesystem     abusing the accessibility service  this requires sending an intent to the system to request uninstallation  and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation 
attack-pattern--0d4e3bbb-7af5-4c88-a215-0c0906bc1e8d,['mobile-attack'],"['T1630', 'APP-43']",Indicator Removal on Host,adversaries may delete  alter  or hide generated artifacts on a device  including files  jailbreak status  or the malicious application itself  these actions may interfere with event collection  reporting  or other notifications used to detect intrusion activity  this may compromise the integrity of mobile security solutions by causing notable events or information to go unreported 
attack-pattern--0d95940f-9583-4e0f-824c-a42c1be47fad,['mobile-attack'],"['T1474', 'APP-6', 'SPC-0', 'SPC-1', 'SPC-2', 'SPC-3', 'SPC-4', 'SPC-5', 'SPC-6', 'SPC-7', 'SPC-8', 'SPC-9', 'SPC-10', 'SPC-11', 'SPC-12', 'SPC-13', 'SPC-14', 'SPC-15', 'SPC-16', 'SPC-17', 'SPC-18', 'SPC-19', 'SPC-20', 'SPC-21']",Supply Chain Compromise,adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise_  supply chain compromise can take place at any stage of the supply chain including     manipulation of development tools   manipulation of a development environment   manipulation of source code repositories  public or private    manipulation of source code in open source dependencies   manipulation of software update distribution mechanisms   compromised infected system images   replacement of legitimate software with modified versions   sales of modified counterfeit products to legitimate distributors   shipment interdiction  while supply chain compromise can impact any component of hardware or software  attackers looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels  targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims   popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency  specifically with the widespread usage of third party advertising libraries 
attack-pattern--0f4fb01b-d57a-4375-b7a2-342c9d3248f7,['mobile-attack'],"['T1430.002', 'CEL-38']",Impersonate SS7 Nodes,adversaries may exploit the lack of authentication in signaling system network nodes to track the to track the location of mobile devices by impersonating a node       by providing the victim s msisdn  phone number  and impersonating network internal nodes to query subscriber information from other nodes  adversaries may use data collected from each hop to eventually determine the device s geographical cell area or nearest cell tower 
attack-pattern--11bd699b-f2c2-4e48-bf46-fb3f8acd9799,pre-attack,['T1425'],Insecure Third-Party Libraries,
attack-pattern--11c2c2b7-1fd4-408f-bc2e-fe772ef9df5e,['mobile-attack'],"['T1636', 'APP-13']",Protected User Data,adversaries may utilize standard operating system apis to collect data from permission backed data stores on a device  such as the calendar or contact list  these permissions need to be declared ahead of time  on android  they must be included in the application s manifest  on ios  they must be included in the application s  info_plist  file        in almost all cases  the user is required to grant access to the data store that the application is trying to access  in recent os versions  vendors have introduced additional privacy controls for users  such as the ability to grant permission to an application only while the application is being actively used by the user       if the device has been jailbroken or rooted  an adversary may be able to access  protected user  without the user s knowledge or approval 
attack-pattern--16d73b64-5681-4ea0-9af4-4ad86f7c96e8,['mobile-attack'],['T1521.002'],Asymmetric Cryptography,adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic  rather than relying on any inherent protections provided by a communication protocol  asymmetric cryptography  also known as public key cryptography  uses a keypair per party  one public that can be freely distributed  and one private that should not be distributed  due to how asymmetric algorithms work  the sender encrypts data with the receiver s public key and the receiver decrypts the data with their private key  this ensures that only the intended recipient can read the encrypted data  common public key encryption algorithms include rsa  elgamal  and ecdsa_  for efficiency  many protocols  including ssl tls  use symmetric cryptography once a connection is established  but use asymmetric cryptography to establish or transmit a key  as such  these protocols are classified as  asymmetric
attack-pattern--198ce408-1470-45ee-b47f-7056050d4fc2,['mobile-attack'],"['T1418', 'APP-12']",Software Discovery,adversaries may attempt to get a listing of applications that are installed on a device  adversaries may use the information from  software  during automated discovery to shape follow on behaviors  including whether or not to fully infect the target and or attempts specific actions       adversaries may attempt to enumerate applications for a variety of reasons  such as figuring out what security measures are present or to identify the presence of target applications 
attack-pattern--1b51f5bc-b97a-498a-8dbd-bc6b1901bf19,['mobile-attack'],['T1424'],Process Discovery,adversaries may attempt to get information about running processes on a device  information obtained could be used to gain an understanding of common software applications running on devices within a network  adversaries may use the information from  process  during automated discovery to shape follow on behaviors  including whether or not the adversary fully infects the target and or attempts specific actions       recent android security enhancements have made it more difficult to obtain a list of running processes  on android   and later  there is no way for an application to obtain the process list without abusing elevated privileges  this is due to the android kernel utilizing the  hidepid  mount feature  prior to android    applications could utilize the  ps  command or examine the   proc  directory on the device       in ios  applications have previously been able to use the  sysctl  command to obtain a list of running processes  this functionality has been removed in later ios versions 
attack-pattern--1d1b1558-c833-482e-aabb-d07ef6eae63d,['mobile-attack'],"['T1636.002', 'APP-13']",Call Log,adversaries may utilize standard operating system apis to gather call log data  on android  this can be accomplished using the call log content provider  ios provides no standard api to access the call log       if the device has been jailbroken or rooted  an adversary may be able to access the  call  without the user s knowledge or approval 
attack-pattern--1d44f529-6fe6-489f-8a01-6261ac43f05e,['mobile-attack'],"['T1418.001', 'APP-12']",Security Software Discovery,adversaries may attempt to get a listing of security applications and configurations that are installed on a device  this may include things such as mobile security products  adversaries may use the information from  security software  during automated discovery to shape follow on behaviors  including whether or not to fully infect the target and or attempt specific actions 
attack-pattern--1f96d624-8409-4472-ad8a-30618ee6b2e2,pre-attack,['T1434'],App Delivered via Email Attachment,
attack-pattern--1ff89c1b-7615-4fe8-b9cb-63aaf52e6dee,['mobile-attack'],['T1631.001'],Ptrace System Calls,adversaries may inject malicious code into processes via ptrace  process trace  system calls in order to evade process based defenses as well as possibly elevate privileges  ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process     ptrace system call injection involves attaching to and modifying a running process  the ptrace system call enables a debugging process to observe and control another process  and each individual thread   including changing memory and register values_ citation  ptrace man  ptrace system call injection is commonly performed by writing arbitrary code into a running process  e_g_  by using  malloc   then invoking that memory with  ptrace_setregs  to set the register containing the next instruction to execute  ptrace system call injection can also be done with  ptrace_poketext   ptrace_pokedata   which copy data to a specific address in the target process's memory  e_g_  the current address of the next instruction _ citation  ptrace man  citation  medium ptrace jul          ptrace system call injection may not be possible when targeting processes with high privileges  and on some systems those that are non child processes_ citation  bh linux inject     running code in the context of another process may allow access to the process's memory  system network resources  and possibly elevated privileges  execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process 
attack-pattern--20b0931a-8952-42ca-975f-775bad295f1a,['mobile-attack'],"['T1629', 'APP-22']",Impair Defenses,adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms  this not only involves impairing preventative defenses  such as anti virus  but also detection capabilities that defenders can use to audit activity and identify malicious behavior  this may span both native defenses as well as supplemental capabilities installed by users or mobile endpoint administrators 
attack-pattern--2204c371-6100-4ae0-82f3-25c07c29772a,['mobile-attack'],['T1453'],Abuse Accessibility Features,  this technique has been deprecated  please use  input   input  and  input  where appropriate_    a malicious app could abuse android's accessibility features to capture sensitive data or perform other malicious actions_  adversaries may abuse accessibility features on android to emulate a user's clicks  for example to steal money from a user's bank account_  adversaries may abuse accessibility features on android devices to evade defenses by repeatedly clicking the  back  button when a targeted app manager or mobile security app is launched  or when strings suggesting uninstallation are detected in the foreground  this effectively prevents the malicious application from being uninstalled 
attack-pattern--22379609-a99f-4a01-bd7e-70f3e105859d,['mobile-attack'],"['T1428', 'APP-32']",Exploitation of Remote Services,adversaries may exploit remote services of enterprise servers  workstations  or other resources to gain unauthorized access to internal systems once inside of a network  adversaries may exploit remote services by taking advantage of a mobile device s access to an internal enterprise network through local connectivity or through a virtual private network  vpn   exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program  service  or within the operating system software or kernel itself to execute adversary controlled code  a common goal for post compromise exploitation of remote services is for lateral movement to enable access to a remote system    an adversary may need to determine if the remote system is in a vulnerable state  which may be done through  network service  or other discovery methods  these look for common  vulnerable software that may be deployed in the network  the lack of certain patches that may indicate vulnerabilities  or security software that may be used to detect or contain remote exploitation  servers are likely a high value target for lateral movement exploitation  but endpoint systems may also be at risk if they provide an advantage or access to additional resources_  depending on the permissions level of the vulnerable remote service  an adversary may achieve  exploitation for privilege  as a result of lateral movement exploitation as well 
attack-pattern--2282a98b-5049-4f61-9381-55baca7c1add,['mobile-attack'],"['T1437.001', 'APP-29']",Web Protocols,adversaries may communicate using application layer protocols associated with web protocols traffic to avoid detection network filtering by blending in with existing traffic  commands to remote mobile devices  and often the results of those commands  will be embedded within the protocol traffic between the mobile client and server    web protocols such as http and https are used for web traffic as well as well as notification services native to mobile messaging services such as google cloud messaging  gcm  and newly  firebase cloud messaging  fcm    gcm fcm  two way communication  and apple push notification service  apns  one way server to device    such notification services leverage http s via the respective api and are commonly abused on android and ios respectively in order blend in with routine device traffic making it difficult for enterprises to inspect 
attack-pattern--233fe2c0-cb41-4765-b454-e0087597fbce,['mobile-attack'],['T1635'],Steal Application Access Token,adversaries can steal user application access tokens as a means of acquiring credentials to access remote systems and resources  this can occur through social engineering or uri hijacking and typically requires user action to grant access  such as through a system  open with  dialogue     application access tokens are used to make authorized api requests on behalf of a user and are commonly used as a way to access resources in cloud based applications and software as a service  saas _ citation  auth    why you should always use access tokens to secure apis sept       oauth is one commonly implemented framework used to issue tokens to users for access to systems  an application desiring access to cloud based services or protected apis can gain entry through oauth  _  using a variety of authorization protocols  an example of a commonly used sequence is microsoft's authorization code grant flow_ citation  microsoft identity platform protocols may       citation  microsoft   oauth code authorization flow   june       an oauth access token enables a third party application to interact with resources containing user data in the ways requested without requiring user credentials 
attack-pattern--24a77e53-0751-46fc-b207-99378fb35c08,['mobile-attack'],['T1628.002'],User Evasion,adversaries may attempt to avoid detection by hiding malicious behavior from the user  by doing this  an adversary s modifications would most likely remain installed on the device for longer  allowing the adversary to continue to operate on that device    while there are many ways this can be accomplished  one method is by using the device s sensors  by utilizing the various motion sensors on a device  such as accelerometer or gyroscope  an application could detect that the device is being interacted with  that way  the application could continue to run while the device is not in use but cease operating while the user is using the device  hiding anything that would indicate malicious activity was ongoing  accessing the sensors in this way does not require any permissions from the user  so it would be completely transparent 
attack-pattern--27d18e87-8f32-4be1-b456-39b90454360f,['mobile-attack'],['T1633'],Virtualization/Sandbox Evasion,adversaries may employ various means to detect and avoid virtualization and analysis environments  this may include changing behaviors after checking for the presence of artifacts indicative of a virtual machine environment  vme  or sandbox  if the adversary detects a vme  they may alter their malware s behavior to disengage from the victim or conceal the core functions of the payload  they may also search for vme artifacts before dropping further payloads  adversaries may use the information learned from  virtualization sandbox  during automated discovery to shape follow on behaviors    adversaries may use several methods to accomplish  virtualization sandbox  such as checking for system artifacts associated with analysis or virtualization  adversaries may also check for legitimate user activity to help determine if it is in an analysis environment 
attack-pattern--27f483c6-6666-44fa-8532-ffd5fc7dab38,['mobile-attack'],"['T1579', 'AUT-11']",Keychain,adversaries may collect the keychain storage data from an ios device to acquire credentials  keychains are the built in way for ios to keep track of users' passwords and credentials for many services and features such as wi fi passwords  websites  secure notes  certificates  private keys  and vpn credentials_  on the device  the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data  standard ios apis allow applications access to their own keychain contained within the database  by utilizing a privilege escalation exploit or existing root access  an adversary can access the entire encrypted database_ citation  apple keychain services  citation  elcomsoft decrypt keychain 
attack-pattern--29e07491-8947-43a3-8d4e-9a787c45f3d3,['mobile-attack'],"['T1413', 'APP-3', 'APP-13']",Access Sensitive Data in Device Logs,on versions of android prior to  _   an adversary may use a malicious application that holds the read_logs permission to obtain private keys  passwords  other credentials  or other sensitive data stored in the device's system log  on android  _  and later  an adversary would need to attempt to perform an operating system privilege escalation attack to be able to access the log 
attack-pattern--29f1f56c-7b7a-4c14-9e39-59577ea2743c,['mobile-attack'],['T1623'],Command and Scripting Interpreter,adversaries may abuse command and script interpreters to execute commands  scripts  or binaries  these interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms  most systems come with some built in command line interface and scripting capabilities  for example  android is a unix like os and includes a basic  unix  that can be accessed via the android debug bridge  adb  or java s  runtime  package_  adversaries may abuse these technologies in various ways as a means of executing arbitrary commands  commands and scripts can be embedded in  initial  payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing c   adversaries may also execute commands through interactive terminals shells 
attack-pattern--2aa78dfd-cb6f-4c70-9408-137cfd96be49,['mobile-attack'],['T1629.003'],Disable or Modify Tools,adversaries may disable security tools to avoid potential detection of their tools and activities  this can take the form of disabling security software  modifying selinux configuration  or other methods to interfere with security tools scanning or reporting information  this is typically done by abusing device administrator permissions or using system exploits to gain root access to the device to modify protected system files 
attack-pattern--2bb20118-e6c0-41dc-a07c-283ea4dd0fb8,['mobile-attack'],['T1544'],Ingress Tool Transfer,adversaries may transfer tools or other files from an external system onto a compromised device to facilitate follow on actions  files may be copied from an external adversary controlled system through the command and control channel  or through alternate protocols with another tool such as ftp 
attack-pattern--2ccc3d39-9598-4d32-9657-42e1c7095d26,['mobile-attack'],['T1637'],Dynamic Resolution,adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations  this may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications  this algorithm can be used to dynamically adjust parameters such as the domain name  ip address  or port number the malware uses for command and control 
attack-pattern--2d646840-f6f5-4619-a5a8-29c8316bbac5,['mobile-attack'],['T1477'],Exploit via Radio Interfaces,the mobile device may be targeted for exploitation through its interface to cellular networks or other radio interfaces_      baseband vulnerability exploitation  a message sent over a radio interface  typically cellular  but potentially bluetooth  gps  nfc  wi fi or other  to the mobile device could exploit a vulnerability in code running on the device_      malicious sms message  an sms message could contain content designed to exploit vulnerabilities in the sms parser on the receiving device  an sms message could also contain a link to a web site containing malicious content designed to exploit the device web browser  vulnerable sim cards may be remotely exploited and reprogrammed via sms messages 
attack-pattern--2de38279-043e-47e8-aaad-1b07af6d0790,['mobile-attack'],['T1423'],Network Service Scanning,adversaries may attempt to get a listing of services running on remote hosts  including those that may be vulnerable to remote software exploitation  methods to acquire this information include port scans and vulnerability scans from the mobile device  this technique may take advantage of the mobile device's access to an internal enterprise network either through local connectivity or through a virtual private network  vpn  
attack-pattern--2f0e8d80-4b8b-4f4a-b5cc-132afe7e057d,['mobile-attack'],['T1618'],User Evasion,adversaries may attempt to avoid detection by hiding malicious behavior from the user  by doing this  an adversary s modifications would most likely remain installed on the device for longer  allowing the adversary to continue to operate on that device    while there are many ways this can be accomplished  one method is by using the device s sensors  by utilizing the various motion sensors on a device  such as accelerometer or gyroscope  an application could detect that the device is being interacted with  that way  the application could continue to run while the device is not in use but cease operating while the user is using the device  hiding anything that would indicate malicious activity was ongoing  accessing the sensors in this way does not require any permissions from the user  so it would be completely transparent 
attack-pattern--32063d7f-0a39-440d-a4a3-2694488f96cc,['mobile-attack'],"['T1646', 'APP-29']",Exfiltration Over C2 Channel,adversaries may steal data by exfiltrating it over an existing command and control channel  stolen data is encoded into the normal communications channel using the same protocol as command and control communications 
attack-pattern--351c0927-2fc1-4a2c-ad84-cbbee7eb8172,['mobile-attack'],"['T1404', 'APP-26']",Exploitation for Privilege Escalation,adversaries may exploit software vulnerabilities in order to to elevate privileges  exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in an application  service  within the operating system software  or kernel itself to execute adversary controlled code  security constructions  such as permission levels  will often hinder access to information and use of certain techniques  adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions    when initially gaining access to a device  an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system  vulnerabilities may exist  usually in operating system components and applications running at higher permissions  that can be exploited to gain higher levels of access on the system  this could enable someone to move from unprivileged or user  level permission to root permissions depending on the component that is vulnerable 
attack-pattern--351ddf79-2d3a-41b4-9bef-82ea5d3ccd69,['mobile-attack'],"['T1616', 'APP-41', 'CEL-42', 'CEL-36', 'CEL-18']",Call Control,adversaries may make  forward  or block phone calls without user authorization  this could be used for adversary goals such as audio surveillance  blocking or forwarding calls from the device owner  or c  communication_  several permissions may be used to programmatically control phone calls  including      answer_phone_calls    allows the application to answer incoming phone calls citation  android permissions     call_phone    allows the application to initiate a phone call without going through the dialer interface citation  android permissions     process_outgoing_calls    allows the application to see the number being dialed during an outgoing call with the option to redirect the call to a different number or abort the call altogether citation  android permissions     manage_own_calls    allows a calling application which manages its own calls through the self managed  connectionservice  apis citation  android permissions     bind_telecom_connection_service    required permission when using a  connectionservice  citation  android permissions     write_call_log    allows an application to write to the device call log  potentially to hide malicious phone calls citation  android permissions   when granted some of these permissions  an application can make a phone call without opening the dialer first  however  if an application desires to simply redirect the user to the dialer with a phone number filled in  it can launch an intent using  intent_action_dial   which requires no specific permissions  this then requires the user to explicitly initiate the call or use some form of  input  to programmatically initiate it 
attack-pattern--37047267-3e56-453c-833e-d92b68118120,['mobile-attack'],"['T1639.001', 'APP-30']",Exfiltration Over Unencrypted Non-C2 Protocol,adversaries may steal data by exfiltrating it over an un encrypted network protocol other than that of the existing command and control channel  the data may also be sent to an alternate network location from the main command and control server_  adversaries may opt to obfuscate this data  without the use of encryption  within network protocols that are natively unencrypted  such as http  ftp  or dns   adversaries may employ custom or publicly available encoding compression algorithms  such as base    or embed data within protocol headers and fields 
attack-pattern--3775a580-a1d1-46c4-8147-c614a715f2e9,['mobile-attack'],['T1624.001'],Broadcast Receivers,adversaries may establish persistence using system mechanisms that trigger execution based on specific events  mobile operating systems have means to subscribe to events such as receiving an sms message  device boot completion  or other device activities    an intent is a message passed between android applications or system components  applications can register to receive broadcast intents at runtime  which are system wide intents delivered to each app when certain events happen on the device  such as network changes or the user unlocking the screen  malicious applications can then trigger certain actions within the app based on which broadcast intent was received    in addition to android system intents  malicious applications can register for intents broadcasted by other applications  this allows the malware to respond based on actions in other applications  this behavior typically indicates a more intimate knowledge  or potentially the targeting of specific devices  users  or applications    in android    api level      broadcast intent behavior was changed  limiting the implicit intents that applications can register for in the manifest  in most cases  applications that register through the manifest will no longer receive the broadcasts  now  applications must register context specific broadcast receivers while the user is actively using the app_ citation  android changes to system broadcasts 
attack-pattern--3911658a-6506-4deb-9ab4-595a51ae71ad,['mobile-attack'],['T1436'],Commonly Used Port,adversaries may communicate over a commonly used port to bypass firewalls or network detection systems and to blend with normal network activity to avoid more detailed inspection    they may use commonly open ports such as    tcp     http    tcp      https    tcp     smtp    tcp udp     dns   they may use the protocol associated with the port or a completely different protocol 
attack-pattern--393e8c12-a416-4575-ba90-19cc85656796,['mobile-attack'],"['T1439', 'APP-0', 'APP-1']",Eavesdrop on Insecure Network Communication,if network traffic between the mobile device and remote servers is unencrypted or is encrypted in an insecure manner  then an adversary positioned on the network can eavesdrop on communication 
attack-pattern--39dd7871-f59b-495f-a9a5-3cb8cc50c9b2,['mobile-attack'],['T1517'],Access Notifications,adversaries may collect data within notifications sent by the operating system or other applications  notifications may contain sensitive data such as one time authentication codes sent over sms  email  or other mediums  in the case of credential access  adversaries may attempt to intercept one time code sent to the device  adversaries can also dismiss notifications to prevent the user from noticing that the notification has arrived and can trigger action buttons contained within notifications_ citation  eset  fa bypass 
attack-pattern--3b0b604f-10db-41a0-b54c-493124d455b9,['mobile-attack'],['T1410'],Network Traffic Capture or Redirection,an adversary may capture network traffic to and from the device to obtain credentials or other sensitive data  or redirect network traffic to flow through an adversary controlled gateway to do the same_  a malicious app could register itself as a vpn client on android or ios to gain access to network packets  however  on both platforms  the user must grant consent to the app to act as a vpn client  and on ios the app requires a special entitlement that must be granted by apple_  alternatively  if a malicious app is able to escalate operating system privileges  it may be able to use those privileges to gain access to network traffic_  an adversary could redirect network traffic to an adversary controlled gateway by establishing a vpn connection or by manipulating the device's proxy settings  for example  skycure  describes the ability to redirect network traffic by installing a malicious ios configuration profile_  if applications encrypt their network traffic  sensitive data may not be accessible to an adversary  depending on the point of capture 
attack-pattern--3dd58c80-4c2e-458c-9503-1b2cd273c4d2,['mobile-attack'],"['T1411', 'APP-31']",Input Prompt,the operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials  bank account information  or personally identifiable information  pii   adversaries may mimic this functionality to prompt users for sensitive information_  compared to traditional pcs  the constrained display size of mobile devices may impair the ability to provide users with contextual information  making users more susceptible to this technique s use_  specific approaches to this technique include       impersonate the identity of a legitimate application  a malicious application could impersonate the identity of a legitimate application  e_g  use the same application name and or icon  and get installed on the device  the malicious app could then prompt the user for sensitive information_      display a prompt on top of a running legitimate application  a malicious application could display a prompt on top of a running legitimate application to trick users into entering sensitive information into the malicious application rather than the legitimate application  typically  the malicious application would need to know when the targeted application  and individual activity within the targeted application  is running in the foreground  so that the malicious application knows when to display its prompt  android  _  and  _ _   respectively  increased the difficulty of determining the current foreground application through modifications to the  activitymanager  api_  a malicious application can still abuse android s accessibility features to determine which application is currently in the foreground_ citation  threatfabric cerberus  approaches to display a prompt include     a malicious application could start a new activity on top of a running legitimate application  android    places new restrictions on the ability for an application to start a new activity on top of another application  which may make it more difficult for adversaries to utilize this technique_ citation  android background    a malicious application could create an application overlay window on top of a running legitimate application  applications must hold the  system_alert_window  permission to create overlay windows  this permission is handled differently than typical android permissions  and at least under certain conditions is automatically granted to applications installed from the google play store_ citation  cloak and dagger  citation  nowsecure android overlay  the  system_alert_window  permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of android in favor of a new api_ citation  xda bubbles       fake device notifications  a malicious application could send fake device notifications to the user  clicking on the device notification could trigger the malicious application to display an input prompt_ citation  group ib gustuff mar      
attack-pattern--3e091a89-a493-4a6c-8e88-d57be19bb98d,['mobile-attack'],"['T1639', 'APP-30']",Exfiltration Over Alternative Protocol,adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel  the data may also be sent to an alternate network location from the main command and control server    alternate protocols include ftp  smtp  http s  dns  smb  or any other network protocol not being used as the main command and control channel  different protocol channels could also include web services such as cloud storage  adversaries may opt to also encrypt and or obfuscate these alternate channels 
attack-pattern--45dcbc83-4abc-4de1-b643-e528d1e9df09,pre-attack,['T1460'],Biometric Spoofing,
attack-pattern--46d818a5-67fa-4585-a7fc-ecf15376c8d5,['mobile-attack'],"['T1398', 'APP-26', 'APP-27']",Boot or Logon Initialization Scripts,adversaries may use scripts automatically executed at boot or logon initialization to establish persistence  initialization scripts are part of the underlying operating system and are not accessible to the user unless the device has been rooted or jailbroken 
attack-pattern--498e7b81-238d-404c-aa5e-332904d63286,['mobile-attack'],['T1627'],Execution Guardrails,adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target  guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary s campaign  values an adversary can provide about a target system or environment to use as guardrails may include environment information such as location_ citation  swb exodus march        guardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within  this use of guardrails is distinct from typical  system  while use of  system  may involve checking for known sandbox values and continuing with execution only if there is no match  the use of guardrails will involve checking for an expected target specific value and only continuing with execution if there is such a match 
attack-pattern--4c58b7c6-a839-4789-bda9-9de33e4d4512,['mobile-attack'],"['T1417.002', 'APP-31']",GUI Input Capture,adversaries may mimic common operating system gui components to prompt users for sensitive information with a seemingly legitimate prompt  the operating system and installed applications often have legitimate needs to prompt the user for sensitive information such as account credentials  bank account information  or personally identifiable information  pii   compared to traditional pcs  the constrained display size of mobile devices may impair the ability to provide users with contextual information  making users more susceptible to this technique s use_  there are several approaches adversaries may use to mimic this functionality  adversaries may impersonate the identity of a legitimate application  e_g  use the same application name and or icon  and  when installed on the device  may prompt the user for sensitive information  adversaries may also send fake device notifications to the user that may trigger the display of an input prompt when clicked_ citation  group ib gustuff mar         additionally  adversaries may display a prompt on top of a running  legitimate application to trick users into entering sensitive information into a malicious application rather than the legitimate application  typically  adversaries need to know when the targeted application and the individual activity within the targeted application is running in the foreground to display the prompt at the proper time  adversaries can abuse android s accessibility features to determine which application is currently in the foreground_ citation  threatfabric cerberus  two known approaches to displaying a prompt include     adversaries start a new activity on top of a running legitimate application  android    places new restrictions on the ability for an application to start a new activity on top of another application  which may make it more difficult for adversaries to utilize this technique_ citation  android background    adversaries create an application overlay window on top of a running legitimate application  applications must hold the  system_alert_window  permission to create overlay windows  this permission is handled differently than typical android permissions and  at least under certain conditions  is automatically granted to applications installed from the google play store_ citation  cloak and dagger  citation  nowsecure android overlay  the  system_alert_window  permission and its associated ability to create application overlay windows are expected to be deprecated in a future release of android in favor of a new api_ citation  xda bubbles 
attack-pattern--4e6620ac-c30c-4f6d-918e-fa20cae7c1ce,['mobile-attack'],"['T1432', 'APP-13']",Access Contact List,an adversary could call standard operating system apis from a malicious application to gather contact list  i_e_  address book  data  or with escalated privileges could directly access files containing contact list data 
attack-pattern--4f14e30b-8b57-4a7b-9093-2c0778ea99cf,['mobile-attack'],"['T1645', 'APP-27']",Compromise Client Software Binary,adversaries may modify system software binaries to establish persistent access to devices  system software binaries are used by the underlying operating system and users over adb or terminal emulators    adversaries may make modifications to client software binaries to carry out malicious tasks when those binaries are executed  for example  malware may come with a pre compiled malicious binary intended to overwrite the genuine one on the device  since these binaries may be routinely executed by the system or user  the adversary can leverage this for persistent access to the device 
attack-pattern--51636761-2e35-44bf-9e56-e337adf97174,['mobile-attack'],['T1406.002'],Software Packing,adversaries may perform software packing to conceal their code  software packing is a method of compressing or encrypting an executable  packing an executable changes the file signature in an attempt to avoid signature based detection  most decompression techniques decompress the executable code in memory    utilities used to perform software packing are called packers  an example packer is ftt  a more comprehensive list of known packers is available  but adversaries may create their own packing techniques that do not leave the same artifacts as well known packers to evade defenses 
attack-pattern--51aedbd6-2837-4d15-aeb0-cb09f2bf22ac,pre-attack,['T1445'],Abuse of iOS Enterprise App Signing Key,
attack-pattern--52651225-0b3a-482d-aa7e-10618fd063b5,['mobile-attack'],"['T1450', 'CEL-38']",Exploit SS7 to Track Device Location,an adversary could exploit signaling system vulnerabilities to track the location of mobile devices 
attack-pattern--52eff1c7-dd30-4121-b762-24ae6fa61bbb,['mobile-attack'],['T1575'],Native API,adversaries may use android s native development kit  ndk  to write native functions that can achieve execution of binaries or functions  like system calls on a traditional desktop operating system  native code achieves execution on a lower level than normal android sdk calls_  the ndk allows developers to write native code in c or c   that is compiled directly to machine code  avoiding all intermediate languages and steps in compilation that higher level languages  like java  typically have  the java native interface  jni  is the component that allows java functions in the android app to call functions in a native library_ citation  google ndk getting started   adversaries may also choose to use native functions to execute malicious code since native actions are typically much more difficult to analyze than standard  non native behaviors_ citation  mitre app vetting effectiveness 
attack-pattern--53263a67-075e-48fa-974b-91c5b5445db7,['mobile-attack'],"['T1476', 'AUT-9', 'ECO-13', 'ECO-21']",Deliver Malicious App via Other Means,malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices  this technique describes installing a malicious application on targeted mobile devices without involving an authorized app store  e_g_  google play store or apple app store   adversaries may wish to avoid placing malicious applications in an authorized app store due to increased potential risk of detection or other reasons  however  mobile devices often are configured to allow application installation only from an authorized app store which would prevent this technique from working_  delivery methods for the malicious application include      spearphishing    including the mobile app package as an attachment to an email message_    spearphishing    including a link to the mobile app package within an email  text message  e_g  sms  imessage  hangouts  whatsapp  etc_   web site  qr code  or other means_   third party app store   installed from a third party app store  as opposed to an authorized app store that the device implicitly trusts as part of its default behavior   which may not apply the same level of scrutiny to apps as applied by an authorized app store_  some android malware comes with functionality to install additional applications  either automatically or when the adversary instructs it to 
attack-pattern--537ea573-8a1c-468c-956b-d16d2ed9d067,['mobile-attack'],"['T1469', 'ECO-5', 'EMM-7']",Remotely Wipe Data Without Authorization,an adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services  e_g  google's android device manager or apple icloud's find my iphone  or to an emm console could use that access to wipe enrolled devices  
attack-pattern--5ca3c7ec-55b2-4587-9376-cf6c96f8047a,['mobile-attack'],['T1604'],Proxy Through Victim,adversaries may use a compromised device as a proxy server to the internet  by utilizing a proxy  adversaries hide the true ip address of their c  server and associated infrastructure from the destination of the network traffic  this masquerades an adversary s traffic as legitimate traffic originating from the compromised device  which can evade ip based restrictions and alerts on certain services  such as bank accounts and social media websites_ citation  threat fabric exobot   the most common type of proxy is a socks proxy  it can typically be implemented using standard os level apis and  rd party libraries with no indication to the user  on android  adversaries can use the  proxy  api to programmatically establish a socks proxy connection  or lower level apis to interact directly with raw sockets 
attack-pattern--60623164-ccd8-4508-a141-b5a34820b3de,['mobile-attack'],['T1520'],Domain Generation Algorithms,adversaries may use  domain generation   dgas  to procedurally generate domain names for command and control communication  and other uses such as malicious application distribution_ citation  securelist rotexy        dgas increase the difficulty for defenders to block  track  or take over the command and control channel  as there potentially could be thousands of domains that malware can check for instructions 
attack-pattern--62adb627-f647-498e-b4cc-41499361bacb,['mobile-attack'],"['T1435', 'APP-13']",Access Calendar Entries,an adversary could call standard operating system apis from a malicious application to gather calendar entry data  or with escalated privileges could directly access files containing calendar data 
attack-pattern--633baf01-6de4-4963-bb54-ff6c6357bed3,['mobile-attack'],"['T1465', 'LPN-0']",Rogue Wi-Fi Access Points,an adversary could set up unauthorized wi fi access points or compromise existing access points and  if the device connects to them  carry out network based attacks such as eavesdropping on or modifying network communication 
attack-pattern--648f8051-1a35-46d3-b1d8-3a3f5cf2cc8e,['mobile-attack'],"['T1541', 'APP-19']",Foreground Persistence,adversaries may abuse android's  startforeground    api method to maintain continuous sensor access  beginning in android    idle applications running in the background no longer have access to device sensors  such as the camera  microphone  and gyroscope  applications can retain sensor access by running in the foreground  using android s  startforeground    api method  this informs the system that the user is actively interacting with the application  and it should not be killed  the only requirement to start a foreground service is showing a persistent notification to the user_  malicious applications may abuse the  startforeground    api method to continue running in the foreground  while presenting a notification to the user pretending to be a genuine application  this would allow unhindered access to the device s sensors  assuming permission has been previously granted_ citation  blackhat sutter android foreground        malicious applications may also abuse the  startforeground    api to inform the android system that the user is actively interacting with the application  thus preventing it from being killed by the low memory killer_ citation  trendmicro yellow camera 
attack-pattern--667e5707-3843-4da8-bd34-88b922526f0d,['mobile-attack'],"['T1458', 'PHY-1', 'PHY-2', 'STA-6']",Replication Through Removable Media,adversaries may move onto devices by exploiting or copying malware to devices connected via usb  in the case of lateral movement  adversaries may utilize the physical connection of a device to a compromised or malicious charging station or pc to bypass application store requirements and install malicious applications directly  in the case of initial access  adversaries may attempt to exploit the device via the connection to gain access to data stored on the device  examples of this include       exploiting insecure bootloaders in a nexus   or  p device over usb and gaining the ability to perform actions including intercepting phone calls  intercepting network traffic  and obtaining the device physical location     exploiting weakly enforced security boundaries in android devices such as the google pixel   over usb     products from cellebrite and grayshift purportedly that can exploit some ios devices using physical access to the data port to unlock the passcode 
attack-pattern--6683aa0c-d98a-4f5b-ac57-ca7e9934a760,['mobile-attack'],"['T1429', 'APP-19']",Audio Capture,adversaries may capture audio to collect information by leveraging standard operating system apis of a mobile device  examples of audio information adversaries may target include user conversations  surroundings  phone calls  or other sensitive information       android and ios  by default  require that applications request device microphone access from the user        on android devices  applications must hold the  record_audio  permission to access the microphone or the  capture_audio_output  permission to access audio output  because android does not allow third party applications to hold the  capture_audio_output  permission by default  only privileged applications  such as those distributed by google or the device vendor  can access audio output_ citation  android permissions  however  adversaries may be able to gain this access after successfully elevating their privileges  with the  capture_audio_output  permission  adversaries may pass the  mediarecorder_audiosource_voice_call  constant to  mediarecorder_setaudiooutput   allowing capture of both voice call uplink and downlink       on ios devices  applications must include the  nsmicrophoneusagedescription  key in their  info_plist  file to access the microphone_ citation  requesting auth media capture 
attack-pattern--670a4d75-103b-4b14-8a9e-4652fa795edd,['mobile-attack'],"['T1625', 'APP-27']",Hijack Execution Flow,adversaries may execute their own malicious payloads by hijacking the way operating systems run applications  hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur over time    there are many ways an adversary may hijack the flow of execution  a primary way is by manipulating how the operating system locates programs to be executed  how the operating system locates libraries to be used by a program can also be intercepted  locations where the operating system looks for programs or resources  such as file directories  could also be poisoned to include malicious payloads 
attack-pattern--693cdbff-ea73-49c6-ac3f-91e7285c31d1,['mobile-attack'],['T1623.001'],Unix Shell,adversaries may abuse unix shell commands and scripts for execution  unix shells are the underlying command prompts on android and ios devices  unix shells can control every aspect of a system  with certain commands requiring elevated privileges that are only accessible if the device has been rooted or jailbroken    unix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops  common uses of shell scripts include long or repetitive tasks  or the need to run the same set of commands on multiple systems    adversaries may abuse unix shells to execute various commands or payloads  interactive shells may be accessed through command and control channels or during lateral movement such as with ssh  adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence    if the device has been rooted or jailbroken  adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user  this dangerous level of permissions allows the adversary to run special commands and modify protected system files 
attack-pattern--6a3f6490-9c44-40de-b059-e5940f246673,['mobile-attack'],"['T1437', 'APP-29']",Application Layer Protocol,adversaries may communicate using application layer protocols to avoid detection network filtering by blending in with existing traffic  commands to the mobile device  and often the results of those commands  will be embedded within the protocol traffic between the mobile device and server    adversaries may utilize many different protocols  including those used for web browsing  transferring files  electronic mail  or dns 
attack-pattern--6b846ad0-cc20-4db6-aa34-91561397c5e2,pre-attack,['T1431'],App Delivered via Web Download,
attack-pattern--6c49d50f-494d-4150-b774-a655022d20a6,['mobile-attack'],"['T1407', 'APP-20']",Download New Code at Runtime,adversaries may download and execute dynamic code not included in the original application package after installation  this technique is primarily used to evade static analysis checks and pre publication scans in official app stores  in some cases  more advanced dynamic or behavioral analysis techniques could detect this behavior  however  in conjunction with  execution  techniques  detecting malicious code downloaded after installation could be difficult_  on android  dynamic code could include native code  dalvik code  or javascript code that utilizes android webview s  javascriptinterface  capability    on ios  dynamic code could be downloaded and executed through  rd party libraries such as jspatch 
attack-pattern--6f86d346-f092-4abc-80df-8558a90c426a,['mobile-attack'],"['T1468', 'ECO-5', 'EMM-7']",Remotely Track Device Without Authorization,an adversary who is able to obtain unauthorized access to or misuse authorized access to cloud services  e_g  google's android device manager or apple icloud's find my iphone  or to an enterprise mobility management  emm    mobile device management  mdm  server console could use that access to track mobile devices 
attack-pattern--6ffad4be-bfe0-424f-abde-4d9a84a800ad,['mobile-attack'],['T1633.001'],System Checks,adversaries may employ various system checks to detect and avoid virtualization and analysis environments  this may include changing behavior after checking for the presence of artifacts indicative of a virtual environment or sandbox  if the adversary detects a virtual environment  they may alter their malware s behavior to disengage from the victim or conceal the core functions of the implant  they may also search for virtualization artifacts before dropping secondary or additional payloads    checks could include generic system properties such as host domain name and samples of network traffic  adversaries may also check the network adapters addresses  cpu core count  and available memory drive size    hardware checks  such as the presence of motion sensors  could also be used to gather evidence that can be indicative a virtual environment  adversaries may also query for specific readings from these devices 
attack-pattern--702055ac-4e54-4ae9-9527-e23a38e0b160,['mobile-attack'],"['T1409', 'AUT-0']",Stored Application Data,adversaries may try to access and collect application data resident on the device  adversaries often target popular applications  such as facebook  wechat  and gmail_ citation  swb exodus march            due to mobile os sandboxing  this technique is only possible in three scenarios         an application stores files in unprotected external storage    an application stores files in its internal storage directory with insecure permissions  e_g          the adversary gains root permissions on the device
attack-pattern--73c26732-6422-4081-8b63-6d0ae93d449e,['mobile-attack'],"['T1513', 'APP-40']",Screen Capture,adversaries may use screen capture to collect additional information about a target device  such as applications running in the foreground  user data  credentials  or other sensitive information  applications running in the background can capture screenshots or videos of another application running in the foreground by using the android  mediaprojectionmanager   generally requires the device user to grant consent _ citation  fortinet screencap july       citation  android screencap        background applications can also use android accessibility services to capture screen contents being displayed by a foreground application  an adversary with root access or android debug bridge  adb  access could call the android  screencap  or  screenrecord  commands_ citation  android screencap        citation  trend micro screencap july      
attack-pattern--74e6003f-c7f4-4047-983b-708cc19b96b6,['mobile-attack'],['T1641.001'],Transmitted Data Manipulation,adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity  by manipulating transmitted data  adversaries may attempt to affect a business process  organizational understanding  or decision making_  manipulation may be possible over a network connection or between system processes where there is an opportunity to deploy a tool that will intercept and change information  the type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary  for complex systems  an adversary would likely need special expertise and possibly access to specialized software related to the system  typically gained through a prolonged information gathering campaign  in order to have the desired impact_  one method to achieve  transmitted data  is by modifying the contents of the device clipboard  malicious applications may monitor clipboard activity through the  clipboardmanager_onprimaryclipchangedlistener  interface on android to determine when clipboard contents have changed  listening to clipboard activity  reading clipboard contents  and modifying clipboard contents requires no explicit application permissions and can be performed by applications running in the background  however  this behavior has changed with the release of android   _  adversaries may use  transmitted data  to replace text prior to being pasted  for example  replacing a copied bitcoin wallet address with a wallet address that is under adversarial control_   transmitted data  was seen within the android clipper_c trojan  this sample was detected by eset in an application distributed through the google play store targeting cryptocurrency wallet numbers_ citation  eset clipboard modification february      
attack-pattern--76c12fc8-a4eb-45d6-a3b7-e371a7248f69,['mobile-attack'],['T1452'],Manipulate App Store Rankings or Ratings,an adversary could use access to a compromised device's credentials to attempt to manipulate app store rankings or ratings by triggering application downloads or posting fake reviews of applications  this technique likely requires privileged access  a rooted or jailbroken device  
attack-pattern--77e30eee-fd48-40b4-99ec-73e97c158b58,['mobile-attack'],['T1416'],URI Hijacking,adversaries may register uniform resource identifiers  uris  to intercept sensitive data_  applications regularly register uris with the operating system to act as a response handler for various actions  such as logging into an app using an external account via single sign on  this allows redirections to that specific uri to be intercepted by the application  if a malicious application were to register for a uri that was already in use by a genuine application  the malicious application may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application  intercepted data may include oauth authorization codes or tokens that could be used by the malicious application to gain access to resources_ citation  trend micro ios url hijacking 
attack-pattern--7827ced0-95e7-4d05-bdcf-0d8f2d37a3d3,['mobile-attack'],"['T1474.001', 'APP-6', 'SPC-0', 'SPC-3', 'SPC-9', 'SPC-10', 'SPC-15']",Compromise Software Dependencies and Development Tools,adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise  applications often depend on external software to function properly  popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency 
attack-pattern--786f488c-cb1f-4602-89c5-86d982ee326b,['mobile-attack'],['T1523'],Evade Analysis Environment,malicious applications may attempt to detect their operating environment prior to fully executing their payloads  these checks are often used to ensure the application is not running within an analysis environment such as a sandbox used for application vetting  security research  or reverse engineering   adversaries may use many different checks such as physical sensors  location  and system properties to fingerprint emulators and sandbox environments_ citation  talos gustuff apr       citation  threatfabric cerberus  citation  cyberscoop evade analysis january       adversaries may access  android_os_systemproperties  via java reflection to obtain specific system information_ citation  github anti emulator  standard values such as phone number  imei  imsi  device ids  and device drivers may be checked against default signatures of common sandboxes_ citation  sophos anti emulation 
attack-pattern--789ef15a-34d9-4b32-a779-8cbbc9eb32f5,['mobile-attack'],['T1635.001'],URI Hijacking,adversaries may register uniform resource identifiers  uris  to intercept sensitive data    applications regularly register uris with the operating system to act as a response handler for various actions  such as logging into an app using an external account via single sign on  this allows redirections to that specific uri to be intercepted by the application  if an adversary were to register for a uri that was already in use by a genuine application  the adversary may be able to intercept data intended for the genuine application or perform a phishing attack against the genuine application  intercepted data may include oauth authorization codes or tokens that could be used by the adversary to gain access to protected resources_ citation  trend micro ios url hijacking 
attack-pattern--79cb02f4-ac4e-4335-8b51-425c9573cce1,['mobile-attack'],"['T1632', 'STA-7']",Subvert Trust Controls,adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted applications  operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust  examples of such features include  an app being allowed to run because it is signed by a valid code signing certificate  an os prompt alerting the user that an app came from an untrusted source  or getting an indication that you are about to connect to an untrusted site  the method adversaries use will depend on the specific mechanism they seek to subvert 
attack-pattern--79eec66a-9bd0-4a3f-ac82-19159e94bd44,['mobile-attack'],"['T1433', 'APP-13']",Access Call Log,on android  an adversary could call standard operating system apis from a malicious application to gather call log data  or with escalated privileges could directly access files containing call log data_  on ios  applications do not have access to the call log  so privilege escalation would be required in order to access the data 
attack-pattern--8197f026-64da-4700-93b9-b55ba55f3b31,['mobile-attack'],['T1581'],Geofencing,adversaries may use a device s geographical location to limit certain malicious behaviors  for example  malware operators may limit the distribution of a second stage payload to certain geographic regions_ citation  lookout esurv    is accomplished by persuading the user to grant the application permission to access location services  the application can then collect  process  and exfiltrate the device s location to perform location based actions  such as ceasing malicious behavior or showing region specific advertisements_  one method to accomplish  on android is to use the built in geofencing api to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location  similar to other  methods  this requires that the user has granted the  access_fine_location  and  access_background_location  permissions  the latter is only required if the application targets android     api level     or higher  however  android    introduced additional permission controls that may restrict background location collection based on user permission choices at runtime  these additional controls include  allow only while using the app   which will effectively prohibit background location collection_ citation  android geofencing api   similarly  on ios  developers can use built in apis to setup and execute geofencing  depending on the use case  the app will either need to call  requestwheninuseauthorization    or  requestalwaysauthorization     depending on when access to the location services is required  similar to android  users also have the option to limit when the application can access the device s location  including one time use and only when the application is running in the foreground_ citation  apple location services    can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within  for example  location data could be used to limit malware spread and or capabilities  which could also potentially evade application analysis environments  ex  malware analysis outside of the target geographic area   other malicious usages could include showing language specific  input  and or advertisements 
attack-pattern--82f04b1e-5371-4a6f-be06-411f0f43b483,['mobile-attack'],"['T1401', 'APP-22']",Device Administrator Permissions,adversaries may request device administrator permissions to perform malicious actions_  by abusing the device administration api  adversaries can perform several nefarious actions  such as resetting the device s password for  device  factory resetting the device to  delete device  and any traces of the malware  disabling all of the device s cameras  or make it more difficult to uninstall the app_ citation  android deviceadmininfo   device administrators must be approved by the user at runtime  with a system popup showing which of the actions have been requested by the app  in conjunction with other techniques  such as  input  an app can programmatically grant itself administrator permissions without any user input 
attack-pattern--831e3269-da49-48ac-94dc-948008e8fd16,pre-attack,['T1443'],Remotely Install Application,
attack-pattern--8605a0ec-b44a-4e98-a7fc-87d4bd3acb66,['mobile-attack'],"['T1634.001', 'AUT-11']",Keychain,adversaries may collect keychain data from an ios device to acquire credentials  keychains are the built in way for ios to keep track of users' passwords and credentials for many services and features such as wi fi passwords  websites  secure notes  certificates  private keys  and vpn credentials    on the device  the keychain database is stored outside of application sandboxes to prevent unauthorized access to the raw data  standard ios apis allow applications access to their own keychain contained within the database  by utilizing a privilege escalation exploit or existing root access  adversaries can access the entire encrypted database_ citation  apple keychain services  citation  elcomsoft decrypt keychain 
attack-pattern--88932a8c-3a17-406f-9431-1da3ff19f6d6,['mobile-attack'],['T1403'],Modify Cached Executable Code,art  the android runtime  compiles optimized code on the device itself to improve performance  an adversary may be able to use escalated privileges to modify the cached code in order to hide malicious behavior  since the code is compiled on the device  it may not receive the same level of integrity checks that are provided to code running in the system partition 
attack-pattern--89fcd02f-62dc-40b9-a54b-9ac4b1baef05,['mobile-attack'],['T1419'],Device Type Discovery,on android  device type information is accessible to apps through the android_os_build class   device information could be used to target privilege escalation exploits 
attack-pattern--8c7862ff-3449-4ac6-b0fd-ac1298a822a5,['mobile-attack'],"['T1576', 'APP-43']",Uninstall Malicious Application,adversaries may include functionality in malware that uninstalls the malicious application from the device  this can be achieved by     abusing device owner permissions to perform silent uninstallation using device owner api calls_   abusing root permissions to delete files from the filesystem_   abusing the accessibility service  this requires an intent be sent to the system to request uninstallation  and then abusing the accessibility service to click the proper places on the screen to confirm uninstallation 
attack-pattern--8e27551a-5080-4148-a584-c64348212e4f,['mobile-attack'],['T1447'],Delete Device Data,adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity  an application must have administrator access to fully wipe the device  while individual files may not require special permissions to delete depending on their storage location   citation  android devicepolicymanager        stored data could include a variety of file formats  such as office files  databases  stored emails  and custom file formats  the impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary  but can include deleting update files to evade detection or deleting attacker specified files for impact 
attack-pattern--8f0e39c6-82c9-41ec-9f93-5696c0f2e274,['mobile-attack'],['T1448'],Carrier Billing Fraud,a malicious app may trigger fraudulent charges on a victim s carrier billing statement in several different ways  including sms toll fraud and sms shortcodes that make purchases_  performing sms fraud relies heavily upon the fact that  when making sms purchases  the carriers perform device verification but not user verification  this allows adversaries to make purchases on behalf of the user  with little or no user interaction_ citation  google bread   malicious applications may also perform toll billing  which occurs when carriers provide payment endpoints over a web page  the application connects to the web page over cellular data so the carrier can directly verify the number  or the application must retrieve a code sent via sms and enter it into the web page_ citation  google bread   on ios  apps cannot send sms messages_  on android  apps must hold the  send_sms  permission to send sms messages  additionally  android version  _  and above has mitigations against this threat by requiring user consent before allowing sms messages to be sent to premium numbers  
attack-pattern--8f142a25-f6c3-4520-bd50-2ae3ab50ed3e,['mobile-attack'],"['T1415', 'AUT-10']",URL Scheme Hijacking,an ios application may be able to maliciously claim a url scheme  allowing it to intercept calls that are meant for a different application  this technique  for example  could be used to capture oauth authorization codes or to phish user credentials 
attack-pattern--939808a7-121d-467a-b028-4441ee8b7cee,['mobile-attack'],['T1481.002'],Bidirectional Communication,adversaries may use an existing  legitimate external web service channel as a means for sending commands to and receiving output from a compromised system  compromised systems may leverage popular websites and social media to host command and control  c   instructions  those infected systems can then send the output from those commands back over that web service channel  the return traffic may occur in a variety of ways  depending on the web service being utilized  for example  the return traffic may take the form of the compromised system posting a comment on a forum  issuing a pull request to development project  updating a document hosted on a web service  or by sending a tweet       popular websites and social media  acting as a mechanism for c   may give a significant amount of cover  this is due to the likelihood that hosts within a network are already communicating with them prior to a compromise  using common services  such as those offered by google or twitter  makes it easier for adversaries to hide in expected noise  web service providers commonly use ssl tls encryption  giving adversaries an added level of protection 
attack-pattern--948a447c-d783-4ba0-8516-a64140fcacd5,['mobile-attack'],['T1509'],Non-Standard Port,adversaries may generate network traffic using a protocol and port paring that are typically not associated  for example  https over port      or port     as opposed to the traditional port      adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis parsing of network data 
attack-pattern--9558a84e-2d5e-4872-918e-d847494a8ffc,['mobile-attack'],"['T1474.003', 'SPC-4', 'SPC-11', 'SPC-12', 'SPC-18', 'SPC-20']",Compromise Software Supply Chain,adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise  supply chain compromise of software can take place in a number of ways  including manipulation of the application source code  manipulation of the update distribution mechanism for that software  or replacing compiled releases with a modified version 
attack-pattern--986f80f7-ff0e-4f48-87bd-0394814bbce5,['mobile-attack'],['T1481.001'],Dead Drop Resolver,adversaries may use an existing  legitimate external web service to host information that points to additional command and control  c   infrastructure  adversaries may post content  known as a dead drop resolver  on web services with embedded  and often obfuscated encoded  domains or ip addresses  once infected  victims will reach out to and be redirected by these resolvers       popular websites and social media  acting as a mechanism for c   may give a significant amount of cover  this is due to the likelihood that hosts within a network are already communicating with them prior to a compromise  using common services  such as those offered by google or twitter  makes it easier for adversaries to hide in expected noise  web service providers commonly use ssl tls encryption  giving adversaries an added level of protection       use of a dead drop resolver may also protect back end c  infrastructure from discovery through malware binary analysis  or enable operational resiliency  since this infrastructure may be dynamically changed  
attack-pattern--99e6295e-741b-4857-b6e5-64989eb039b4,['mobile-attack'],"['T1430', 'APP-24']",Location Tracking,adversaries may track a device s physical location through use of standard operating system apis via malicious or exploited applications on the compromised device       on android  applications holding the  access_coaurse_location  or  access_fine_location  permissions provide access to the device s physical location  on android    and up  declaration of the  access_background_location  permission in an application s manifest will allow applications to request location access even when the application is running in the background_ citation  android request location permissions  some adversaries have utilized integration of baidu map services to retrieve geographical location once the location access permissions had been obtained_ citation  palo alto henbox       on ios  applications must include the  nslocationwheninuseusagedescription    nslocationalwaysandwheninuseusagedescription   and or  nslocationalwaysusagedescription  keys in their  info_plist  file depending on the extent of requested access to location information_ citation  apple requesting authorization for location services  on ios  _  and up  applications call  requestwheninuseauthorization    to request access to location information when the application is in use or  requestalwaysauthorization    to request access to location information regardless of whether the application is in use  with elevated privileges  an adversary may be able to access location data without explicit user consent with the  com_apple_locationd_preauthorized  entitlement key_ citation  google project zero insomnia 
attack-pattern--9c049d7b-c92a-4733-9381-27e2bd2ccadc,['mobile-attack'],"['T1626.001', 'APP-22']",Device Administrator Permissions,adversaries may abuse android s device administration api to obtain a higher degree of control over the device  by abusing the api  adversaries can perform several nefarious actions  such as resetting the device s password for  endpoint denial of  factory resetting the device for  file  and to delete any traces of the malware  disabling all the device s cameras  or to make it more difficult to uninstall the app_  device administrators must be approved by the user at runtime  with a system popup showing which actions have been requested by the app  in conjunction with other techniques  such as  input  an app can programmatically grant itself administrator permissions without any user input 
attack-pattern--9d7c32f4-ab39-49dc-8055-8106bc2294a1,['mobile-attack'],"['T1446', 'APP-28']",Device Lockout,an adversary may seek to lock the legitimate user out of the device  for example to inhibit user interaction or to obtain a ransom payment_  on android versions prior to    apps can abuse device administrator access to reset the device lock passcode to prevent the user from unlocking the device  after android    only device or profile owners  e_g  mdms  can reset the device s passcode_ citation  android resetpassword   on ios devices  this technique does not work because mobile device management servers can only remove the screen lock passcode  they cannot set a new passcode  however  on jailbroken devices  malware has been discovered that can lock the user out of the device 
attack-pattern--9ef05e3d-52db-4c12-be4f-519214bbe91f,['mobile-attack'],"['T1430.001', 'ECO-5', 'EMM-7']",Remote Device Management Services,an adversary may use access to cloud services  e_g  google's android device manager or apple icloud's find my iphone  or to an enterprise mobility management  emm  mobile device management  mdm  server console to track the location of mobile devices managed by the service 
attack-pattern--a0464539-e1b7-4455-a355-12495987c300,['mobile-attack'],"['T1427', 'PHY-2']",Attack PC via USB Connection,with escalated privileges  an adversary could program the mobile device to impersonate usb devices such as input devices  keyboard and mouse   storage devices  and or networking devices in order to attack a physically connected pc this technique has been demonstrated on android  we are unaware of any demonstrations on ios 
attack-pattern--a21a6a79-f9a1-4c87-aed9-ba2d79536881,pre-attack,['T1441'],Stolen Developer Credentials or Signing Keys,
attack-pattern--a5de0540-73e7-4c67-96da-4143afedc7ed,['mobile-attack'],"['T1467', 'CEL-7']",Rogue Cellular Base Station,an adversary could set up a rogue cellular base station and then use it to eavesdrop on or manipulate cellular device communication  a compromised cellular femtocell could be used to carry out this technique 
attack-pattern--a64a820a-cb21-471f-920c-506a2ff04fa5,['mobile-attack'],"['T1451', 'STA-22']",SIM Card Swap,an adversary could convince the mobile network operator  e_g  through social networking  forged identification  or insider attacks performed by trusted employees  to issue a new sim card and associate it with an existing phone number and account  the adversary could then obtain sms messages or hijack phone calls intended for someone else_  one use case is intercepting authentication messages or phone calls to obtain illicit access to online banking or other online accounts  as many online services allow account password resets by sending an authentication code over sms to a phone number associated with the account 
attack-pattern--a8c31121-852b-46bd-9ba4-674ae5afe7ad,['mobile-attack'],"['T1417', 'APP-31', 'AUT-13']",Input Capture,adversaries may use methods of capturing user input to obtain credentials or collect information  during normal device usage  users often provide credentials to various locations  such as login pages portals or system dialog boxes  input capture mechanisms may be transparent to the user  e_g   or rely on deceiving the user into providing input into what they believe to be a genuine application prompt  e_g   gui input
attack-pattern--a8e971b8-8dc7-4514-8249-ae95427ec467,['mobile-attack'],"['T1643', 'APP-16']",Generate Traffic from Victim,adversaries may generate outbound traffic from devices  this is typically performed to manipulate external outcomes  such as to achieve carrier billing fraud or to manipulate app store rankings or ratings  outbound traffic is typically generated as sms messages or general web traffic  but may take other forms as well_  if done via sms messages  android apps must hold the  send_sms  permission  additionally  sending an sms message requires user consent if the recipient is a premium number  applications cannot send sms messages on ios
attack-pattern--a91262d5-b9ff-463f-b8d2-12e4ea1eb3c9,['mobile-attack'],"['T1630.003', 'EMM-5']",Disguise Root/Jailbreak Indicators,an adversary could use knowledge of the techniques used by security software to evade detection  for example  some mobile security products perform compromised device detection by searching for particular artifacts such as an installed  su  binary  but that check could be evaded by naming the binary something else  similarly  polymorphic code techniques could be used to evade signature based detection 
attack-pattern--a93ccb8f-3996-42e2-b7c7-bb599d4e205f,['mobile-attack'],"['T1444', 'APP-31', 'APP-14']",Masquerade as Legitimate Application,an adversary could distribute developed malware by masquerading the malware as a legitimate application  this can be done in two different ways  by embedding the malware in a legitimate application  or by pretending to be a legitimate application_  embedding the malware in a legitimate application is done by downloading the application  disassembling it  adding the malicious code  and then re assembling it  the app would appear to be the original app  but would contain additional malicious functionality  the adversary could then publish the malicious application to app stores or use another delivery method_  pretending to be a legitimate application relies heavily on lack of scrutinization by the user  typically  a malicious app pretending to be a legitimate one will have many similar details as the legitimate one  such as name  icon  and description_ citation  palo alto henbox   malicious applications may also masquerade as legitimate applications when requesting access to the accessibility service in order to appear as legitimate to the user  increasing the likelihood that the access will be granted 
attack-pattern--a9cab8f6-4c94-4c9b-9e7d-9d863ff53431,pre-attack,['T1457'],Malicious Media Content,
attack-pattern--a9fa0d30-a8ff-45bf-922e-7720da0b7922,['mobile-attack'],"['T1636.001', 'APP-13']",Calendar Entries,adversaries may utilize standard operating system apis to gather calendar entry data  on android  this can be accomplished using the calendar content provider  on ios  this can be accomplished using the  eventkit  framework       if the device has been jailbroken or rooted  an adversary may be able to access  calendar  without the user s knowledge or approval 
attack-pattern--ab7400b7-3476-4776-9545-ef3fa373de63,['mobile-attack'],['T1630.002'],File Deletion,adversaries may wipe a device or delete individual files in order to manipulate external outcomes or hide activity  an application must have administrator access to fully wipe the device  while individual files may not require special permissions to delete depending on their storage location_ citation  android devicepolicymanager         stored data could include a variety of file formats  such as office files  databases  stored emails  and custom file formats  the impact file deletion will have depends on the type of data as well as the goals and objectives of the adversary  but can include deleting update files to evade detection or deleting attacker specified files for impact 
attack-pattern--acf8fd2a-dc98-43b4-8d37-64e10728e591,['mobile-attack'],"['T1629.002', 'APP-22']",Device Lockout,an adversary may seek to inhibit user interaction by locking the legitimate user out of the device  this is typically accomplished by requesting device administrator permissions and then locking the screen using  devicepolicymanager_locknow     other novel techniques for locking the user out of the device have been observed  such as showing a persistent overlay  using carefully crafted  call  notification screens  and locking html pages in the foreground  these techniques can be very difficult to get around  and typically require booting the device into safe mode to uninstall the malware_ citation  microsoft mallockerb  citation  talos gplayed  citation  securelist rotexy        prior to android    device administrators were able to reset the device lock passcode to prevent the user from unlocking the device  the release of android   introduced updates that only allow device or profile owners  e_g  mdms  to reset the device s passcode_ citation  android resetpassword 
attack-pattern--b1c95426-2550-4621-8028-ceebf28b3a47,['mobile-attack'],"['T1417.001', 'AUT-13']",Keylogging,adversaries may log user keystrokes to intercept credentials or other information from the user as the user types them_  some methods of keylogging include     masquerading as a legitimate third party keyboard to record user keystrokes  on both android and ios  users must explicitly authorize the use of third party keyboard apps  users should be advised to use extreme caution before granting this authorization when it is requested_   abusing accessibility features  on android  adversaries may abuse accessibility features to record keystrokes by registering an  accessibilityservice  class  overriding the  onaccessibilityevent  method  and listening for the  accessibilityevent_type_view_text_changed  event type  the event object passed into the function will contain the data that the user typed    additional methods of keylogging may be possible if root access is available 
attack-pattern--b327a9c0-e709-495c-aa6e-00b042136e2b,['mobile-attack'],"['T1582', 'APP-16', 'CEL-41']",SMS Control,adversaries may delete  alter  or send sms messages without user authorization  this could be used to hide c  sms messages  spread malware  or various external effects_  this can be accomplished by requesting the  receive_sms  or  send_sms  permissions depending on what the malware is attempting to do  if the app is set as the default sms handler on the device  the  sms_deliver  broadcast intent can be registered  which allows the app to write to the sms content provider  the content provider directly modifies the messaging database on the device  which could allow malicious applications with this ability to insert  modify  or delete arbitrary messages on the device_ citation  sms kitkat  citation  android smsprovider 
attack-pattern--b332a960-3c04-495a-827f-f17a5daed3a6,['mobile-attack'],"['T1408', 'EMM-5']",Disguise Root/Jailbreak Indicators,an adversary could use knowledge of the techniques used by security software to evade detection  for example  some mobile security products perform compromised device detection by searching for particular artifacts such as an installed  su  binary  but that check could be evaded by naming the binary something else  similarly  polymorphic code techniques could be used to evade signature based detection 
attack-pattern--b3c2e5de-0941-4b57-ba61-af029eb5517a,['mobile-attack'],"['T1438', 'APP-30']",Exfiltration Over Other Network Medium,adversaries may attempt to exfiltrate data over a different network medium than the command and control channel  if the command and control network is a standard internet connection  the exfiltration may occur  for example  via bluetooth  or another radio frequency  rf  channel    adversaries may choose to do this if they have sufficient access or proximity  and the connection might not be secured or defended as well as the primary internet connected channel because it is not routed through the same enterprise network 
attack-pattern--b765efd1-02e6-4e67-aebf-0fef5c37e54b,pre-attack,['T1440'],Detect App Analysis Environment,
attack-pattern--b7c0e45f-0206-4f75-96e7-fe7edad3aaff,['mobile-attack'],['T1631'],Process Injection,adversaries may inject code into processes in order to evade process based defenses or even elevate privileges  process injection is a method of executing arbitrary code in the address space of a separate live process  running code in the context of another process may allow access to the process's memory  system network resources  and possibly elevated privileges  execution via process injection may also evade detection from security products since the execution is masked under a legitimate process    both android and ios have no legitimate way to achieve process injection  the only way this is possible is by abusing existing root access or exploiting a vulnerability 
attack-pattern--b928b94a-4966-4e2a-9e61-36505b896ebc,pre-attack,['T1462'],Malicious Software Development Tools,
attack-pattern--bb4387ab-7a51-468b-bf5f-a9a8612f0303,['mobile-attack'],['T1521.001'],Symmetric Cryptography,adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic  rather than relying on any inherent protections provided by a communication protocol  symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption  common symmetric encryption algorithms include aes  blowfish  and rc  
attack-pattern--bd4d32f5-eed4-4018-a649-40b229dd1d69,['mobile-attack'],['T1402'],Broadcast Receivers,an intent is a message passed between android application or system components  applications can register to receive broadcast intents at runtime  which are system wide intents delivered to each app when certain events happen on the device  such as network changes or the user unlocking the screen  malicious applications can then trigger certain actions within the app based on which broadcast intent was received_  further  malicious applications can register for intents broadcasted by other applications in addition to the android system itself  this allows the malware to respond based on actions in other applications  this behavior typically indicates a more intimate knowledge  or potentially the targeting of specific devices  users  or applications_  in android    api level      broadcast intent behavior was changed  limiting the implicit intents that applications can register for in the manifest  in most cases  applications that register through the manifest will no longer receive the broadcasts  now  applications must register context specific broadcast receivers while the user is actively using the app_ citation  android changes to system broadcasts 
attack-pattern--c08366bb-8d11-4921-853f-f0a3b6a2a1da,['mobile-attack'],"['T1474.002', 'SPC-1', 'SPC-2', 'SPC-4', 'SPC-5', 'SPC-6', 'SPC-7', 'SPC-8', 'SPC-13', 'SPC-16', 'SPC-17', 'SPC-21']",Compromise Hardware Supply Chain,adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise  by modifying hardware or firmware in the supply chain  adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system 
attack-pattern--c4b96c0b-cb58-497a-a1c2-bb447d79d692,['mobile-attack'],"['T1414', 'APP-35']",Clipboard Data,adversaries may abuse clipboard manager apis to obtain sensitive information copied to the device clipboard  for example  passwords being copied and pasted from a password manager application could be captured by a malicious application installed on the device       on android  applications can use the  clipboardmanager_onprimaryclipchangedlistener    api to register as a listener and monitor the clipboard for changes  however  starting in android     this can only be used if the application is in the foreground  or is set as the device s default input method editor  ime _ citation  github capture clipboard       citation  android    privacy changes       on ios  this can be accomplished by accessing the  uipasteboard_general_string  field  however  starting in ios     upon accessing the clipboard  the user will be shown a system notification if the accessed text originated in a different application  for example  if the user copies the text of an imessage from the messages application  the notification will read  application_name has pasted from messages  when the text was pasted in a different application 
attack-pattern--c5089859-b21f-40a3-8be4-63e381b8b1c0,['mobile-attack'],"['T1400', 'APP-27']",Modify System Partition,if an adversary can escalate privileges  he or she may be able to use those privileges to place malicious code in the device system partition  where it may persist after device resets and may not be easily removed by the device user_  many android devices provide the ability to unlock the bootloader for development purposes  an unlocked bootloader may provide the ability for an adversary to modify the system partition  even if the bootloader is locked  it may be possible for an adversary to escalate privileges and then modify the system partition 
attack-pattern--c548d8c4-a0a3-4a24-bb79-2a84abbc7b36,['mobile-attack'],['T1641'],Data Manipulation,adversaries may insert  delete  or alter data in order to manipulate external outcomes or hide activity  by manipulating data  adversaries may attempt to affect a business process  organizational understanding  or decision making_  the type of modification and the impact it will have depends on the target application  process  and the goals and objectives of the adversary  for complex systems  an adversary would likely need special expertise and possibly access to specialized software related to the system  typically gained through a prolonged information gathering campaign  in order to have the desired impact 
attack-pattern--c6421411-ae61-42bb-9098-73fddb315002,['mobile-attack'],"['T1636.004', 'APP-13']",SMS Messages,adversaries may utilize standard operating system apis to gather sms messages  on android  this can be accomplished using the sms content provider  ios provides no standard api to access sms messages    if the device has been jailbroken or rooted  an adversary may be able to access  sms  without the user s knowledge or approval 
attack-pattern--c6a146ae-9c63-4606-97ff-e261e76e8380,['mobile-attack'],['T1481'],Web Service,adversaries may use an existing  legitimate external web service as a means for relaying data to from a compromised system  popular websites and social media  acting as a mechanism for c   may give a significant amount of cover  this is due to the likelihood that hosts within a network are already communicating with them prior to a compromise  using common services  such as those offered by google or twitter  makes it easier for adversaries to hide in expected noise  web service providers commonly use ssl tls encryption  giving adversaries an added level of protection       use of web services may also protect back end c  infrastructure from discovery through malware binary analysis  or enable operational resiliency  since this infrastructure may be dynamically changed  
attack-pattern--c6e17ca2-08b5-4379-9786-89bd05241831,['mobile-attack'],"['T1625.001', 'APP-27']",System Runtime API Hijacking,adversaries may execute their own malicious payloads by hijacking the way an operating system run applications  hijacking execution flow can be for the purposes of persistence since this hijacked execution may reoccur at later points in time     on android  adversaries may overwrite the standard os api library with a malicious alternative to hook into core functions to achieve persistence  by doing this  the adversary s code will be executed every time the overwritten api function is called by an app on the infected device 
attack-pattern--c91c304a-975d-4501-9789-0db1c57afd3f,pre-attack,['T1455'],Exploit Baseband Vulnerability,
attack-pattern--cc6e0637-76d2-4af3-a604-9d8d3ff8a6b3,['mobile-attack'],"['T1634', 'AUT-11']",Credentials from Password Store,adversaries may search common password storage locations to obtain user credentials  passwords can be stored in several places on a device  depending on the operating system or application holding the credentials  there are also specific applications that store passwords to make it easier for users manage and maintain  once credentials are obtained  they can be used to perform lateral movement and access restricted information 
attack-pattern--ccde43e4-78f9-4f32-b401-c081e7db71ea,['mobile-attack'],['T1617'],Hooking,adversaries may utilize hooking to hide the presence of artifacts associated with their behaviors to evade detection  hooking can be used to modify return values or data structures of system apis and function calls  this process typically involves using  rd party root frameworks  such as xposed or magisk  with either a system exploit or pre existing root access  by including custom modules for root frameworks  adversaries can hook system apis and alter the return value and or system data structures to alter functionality visibility of various aspects of the system 
attack-pattern--cde2cb84-455e-410c-8aa9-086f2788bcd2,['mobile-attack'],"['T1478', 'STA-7']",Install Insecure or Malicious Configuration,an adversary could attempt to install insecure or malicious configuration settings on the mobile device  through means such as phishing emails or text messages either directly containing the configuration settings as an attachment  or containing a web link to the configuration settings  the device user may be tricked into installing the configuration settings through social engineering techniques _  for example  an unwanted certification authority  ca  certificate could be placed in the device's trusted certificate store  increasing the device's susceptibility to adversary in the middle network attacks seeking to eavesdrop on or manipulate the device's network communication   eavesdrop on insecure network  and  manipulate device   on ios  malicious configuration profiles could contain unwanted certification authority  ca  certificates or other insecure settings such as unwanted proxy server or vpn settings to route the device's network traffic through an adversary's system  the device could also potentially be enrolled into a malicious mobile device management  mdm  system  
attack-pattern--cf28ca46-1fd3-46b4-b1f6-ec0b72361848,['mobile-attack'],"['T1420', 'STA-41']",File and Directory Discovery,adversaries may enumerate files and directories or search in specific device locations for desired information within a filesystem  adversaries may use the information from  file and directory  during automated discovery to shape follow on behaviors  including deciding if the adversary should fully infect the target and or attempt specific actions    on android  linux file permissions and selinux policies typically stringently restrict what can be accessed by apps without taking advantage of a privilege escalation exploit  the contents of the external storage directory are generally visible  which could present concerns if sensitive data is inappropriately stored there  ios's security architecture generally restricts the ability to perform any type of  file and directory  without use of escalated privileges 
attack-pattern--d13fa042-8f26-44e1-a2a8-af0bf8e2ac9a,['mobile-attack'],"['T1406', 'APP-21']",Obfuscated Files or Information,adversaries may attempt to make a payload or file difficult to discover or analyze by encrypting  encoding  or otherwise obfuscating its contents on the device or in transit  this is common behavior that can be used across different platforms and the network to evade defenses     payloads may be compressed  archived  or encrypted in order to avoid detection  these payloads may be used during initial access or later to mitigate detection  portions of files can also be encoded to hide the plaintext strings that would otherwise help defenders with discovery  payloads may also be split into separate  seemingly benign files that only reveal malicious functionality when reassembled_ citation  microsoft mallockerb 
attack-pattern--d1f1337e-aea7-454c-86bd-482a98ffaf62,['mobile-attack'],['T1516'],Input Injection,a malicious application can inject input to the user interface to mimic user interaction through the abuse of android's accessibility apis_   input  can be achieved using any of the following methods     mimicking user clicks on the screen  for example to steal money from a user's paypal account_   injecting global actions  such as  global_action_back   programatically mimicking a physical back button press   to trigger actions on behalf of the user_ citation  talos gustuff apr         inserting input into text fields on behalf of the user  this method is used legitimately to auto fill text fields by applications such as password managers_ citation  bitwarden autofill logins 
attack-pattern--d2e112dc-f6d4-488d-b8df-ecbfb57a0a2d,['mobile-attack'],"['T1464', 'CEL-7', 'CEL-8', 'LPN-5', 'GPS-0']",Network Denial of Service,adversaries may perform network denial of service  dos  attacks to degrade or block the availability of targeted resources to users  network dos can be performed by exhausting the network bandwidth that services rely on  or by jamming the signal going to or coming from devices    a network dos will occur when an adversary is able to jam radio signals  e_g  wi fi  cellular  gps  around a device to prevent it from communicating  for example  to jam cellular signal  an adversary may use a handheld signal jammer  which jam devices within the jammer s operational range    usage of cellular jamming has been documented in several arrests reported in the news 
attack-pattern--d3bc5020-f6a2-41c0-8ccb-5e563101b60c,['mobile-attack'],['T1577'],Compromise Application Executable,adversaries may modify applications installed on a device to establish persistent access to a victim  these malicious modifications can be used to make legitimate applications carry out adversary tasks when these applications are in use_  there are multiple ways an adversary can inject malicious code into applications  one method is by taking advantages of device vulnerabilities  the most well known being janus  an android vulnerability that allows adversaries to add extra bytes to apk  application  and dex  executable  files without affecting the file's signature  by being able to add arbitrary bytes to valid applications  attackers can seamlessly inject code into genuine executables without the user's knowledge_ citation  guardsquare janus   adversaries may also rebuild applications to include malicious modifications  this can be achieved by decompiling the genuine application  merging it with the malicious code  and recompiling it_ citation  checkpoint agent smith   adversaries may also take action to conceal modifications to application executables and bypass user consent  these actions include altering modifications to appear as an update or exploiting vulnerabilities that allow activities of the malicious application to run inside a system application_ citation  checkpoint agent smith 
attack-pattern--d446b9f0-06a9-4a8d-97ee-298cfee84f14,['mobile-attack'],['T1624'],Event Triggered Execution,adversaries may establish persistence using system mechanisms that trigger execution based on specific events  mobile operating systems have means to subscribe to events such as receiving an sms message  device boot completion  or other device activities    adversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via automatically and repeatedly executing malicious code  after gaining access to a victim s system  adversaries may create or modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked 
attack-pattern--d4536441-1bcc-49fa-80ae-a596ed3f7ffd,['mobile-attack'],['T1422'],System Network Configuration Discovery,adversaries may look for details about the network configuration and settings  such as ip and or mac addresses  of operating systems they access or through information discovery of remote systems       on android  details of onboard network interfaces are accessible to apps through the  java_net_networkinterface  class  previously  the android  telephonymanager  class could be used to gather telephony related device identifiers  information such as the imsi  imei  and phone number  however  starting with android     only preloaded  carrier  the default sms  or device and profile owner applications can access the telephony related device identifiers       on ios  gathering network configuration information is not possible without root access       adversaries may use the information from  system network configuration  during automated discovery to shape follow on behaviors  including determining certain access within the target network and what actions to do next 
attack-pattern--d731c21e-f27d-4756-b418-0e2aaabd6d63,['mobile-attack'],"['T1463', 'APP-1']",Manipulate Device Communication,if network traffic between the mobile device and a remote server is not securely protected  then an attacker positioned on the network may be able to manipulate network communication without being detected  for example  fireeye researchers found in      that     of the top       free applications in the google play store had at least one transport layer security  tls  implementation vulnerability potentially opening the applications' network traffic to adversary in the middle attacks  
attack-pattern--d8940e76-f9c1-4912-bea6-e21c251370b6,['mobile-attack'],"['T1512', 'APP-19']",Video Capture,an adversary can leverage a device s cameras to gather information by capturing video recordings  images may also be captured  potentially in specified intervals  in lieu of video files        malware or scripts may interact with the device cameras through an available api provided by the operating system  video or image files may be written to disk and exfiltrated later  this technique differs from  screen  due to use of the device s cameras for video recording rather than capturing the victim s screen       in android  an application must hold the  android_permission_camera  permission to access the cameras  in ios  applications must include the  nscamerausagedescription  key in the  info_plist  file  in both cases  the user must grant permission to the requesting application to use the camera  if the device has been rooted or jailbroken  an adversary may be able to access the camera without knowledge of the user 
attack-pattern--d916f176-a1ca-4a78-9fdd-4058bc28162e,['mobile-attack'],['T1481.003'],One-Way Communication,adversaries may use an existing  legitimate external web service channel as a means for sending commands to a compromised system without receiving return output  compromised systems may leverage popular websites and social media to host command and control  c   instructions  those infected systems may opt to send the output from those commands back over a different c  channel  including to another distinct web service  alternatively  compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response       popular websites and social media  acting as a mechanism for c   may give a significant amount of cover  this is due to the likelihood that hosts within a network are already communicating with them prior to a compromise  using common services  such as those offered by google or twitter  makes it easier for adversaries to hide in expected noise  web service providers commonly use ssl tls encryption  giving adversaries an added level of protection 
attack-pattern--d9db3d46-66ca-44b4-9daa-1ef97cb7465a,['mobile-attack'],"['T1475', 'ECO-4', 'ECO-16', 'ECO-17', 'APP-20', 'APP-21', 'ECO-22']",Deliver Malicious App via Authorized App Store,malicious applications are a common attack vector used by adversaries to gain a presence on mobile devices  mobile devices often are configured to allow application installation only from an authorized app store  e_g_  google play store or apple app store   an adversary may seek to place a malicious application in an authorized app store  enabling the application to be installed onto targeted devices_  app stores typically require developer registration and use vetting techniques to identify malicious applications  adversaries may use these techniques against app store defenses      download new code at     obfuscated files or   adversaries may also seek to evade vetting by placing code in a malicious application to detect whether it is running in an app analysis environment and  if so  avoid performing malicious actions while under analysis       adversaries may also use fake identities  payment cards  etc_  to create developer accounts to publish malicious applications to app stores    adversaries may also use control of a target's google account to use the google play store's remote installation capability to install apps onto the android devices associated with the google account     only applications that are available for download through the google play store can be remotely installed using this technique_ 
attack-pattern--d9e88203-2b5d-405f-a406-2933b1e3d7e4,['mobile-attack'],"['T1471', 'APP-28']",Data Encrypted for Impact,an adversary may encrypt files stored on a mobile device to prevent the user from accessing them  this may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key  ransomware  or to render data permanently inaccessible in cases where the key is not saved or transmitted 
attack-pattern--dc01774a-d1c1-45fb-b506-0a5d1d6593d9,['mobile-attack'],"['T1629.001', 'APP-22']",Prevent Application Removal,adversaries may abuse the android device administration api to prevent the user from uninstalling a target application  in earlier versions of android  device administrator applications needed their administration capabilities explicitly deactivated by the user before the application could be uninstalled  this was later updated so the user could deactivate and uninstall the administrator application in one step_  adversaries may also abuse the device accessibility apis to prevent removal  this set of apis allows the application to perform certain actions on behalf of the user and programmatically determine what is being shown on the screen  the malicious application could monitor the device screen for certain modals  e_g_  the confirmation modal to uninstall an application  and inject screen input or a back button tap to close the modal 
attack-pattern--dd818ea5-adf5-41c7-93b5-f3b839a219fb,['mobile-attack'],['T1421'],System Network Connections Discovery,adversaries may attempt to get a listing of network connections to or from the compromised device they are currently accessing or from remote systems by querying for information over the network       this is typically accomplished by utilizing device apis to collect information about nearby networks  such as wi fi  bluetooth  and cellular tower connections  on android  this can be done by querying the respective apis          wifiinfo  for information about the current wi fi connection  as well as nearby wi fi networks  querying the  wifiinfo  api requires the application to hold the  access_fine_location  permission       bluetoothadapter  for information about bluetooth devices  which also requires the application to hold several permissions granted by the user at runtime      for android versions prior to q  applications can use the  telephonymanager_getneighboringcellinfo    method  for q and later  applications can use the  telephonymanager_getallcellinfo    method  both methods require the application hold the  access_fine_location  permission 
attack-pattern--dfe29258-ce59-421c-9dee-e85cb9fa90cd,['mobile-attack'],['T1461'],Lockscreen Bypass,an adversary with physical access to a mobile device may seek to bypass the device s lockscreen  several methods exist to accomplish this  including     biometric spoofing  if biometric authentication is used  an adversary could attempt to spoof a mobile device s biometric authentication mechanism  both ios and android partly mitigate this attack by requiring the device s passcode rather than biometrics to unlock the device after every device restart  and after a set or random amount of time_   unlock code bypass  an adversaries could attempt to brute force or otherwise guess the lockscreen passcode  typically a pin or password   including physically observing   shoulder surfing   the device owner s use of the lockscreen passcode  mobile os vendors partly mitigate this by implementing incremental backoff timers after a set number of failed unlock attempts  as well as a configurable full device wipe after several failed unlock attempts_   vulnerability exploit  techniques have been periodically demonstrated that exploit mobile devices to bypass the lockscreen  the vulnerabilities are generally patched by the device or os vendor once disclosed_
attack-pattern--e083305c-49e7-4c87-aae8-9689213bffbe,['mobile-attack'],['T1605'],Command-Line Interface,adversaries may use built in command line interfaces to interact with the device and execute commands  android provides a bash shell that can be interacted with over the android debug bridge  adb  or programmatically using java s  runtime  package  on ios  adversaries can interact with the underlying runtime shell if the device has been jailbroken_  if the device has been rooted or jailbroken  adversaries may locate and invoke a superuser binary to elevate their privileges and interact with the system as the root user  this dangerous level of permissions allows the adversary to run special commands and modify protected system files 
attack-pattern--e0b9ecb8-a7d1-43c7-aa30-8e19c6a92c86,['mobile-attack'],"['T1636.003', 'APP-13']",Contact List,adversaries may utilize standard operating system apis to gather contact list data  on android  this can be accomplished using the contacts content provider  on ios  this can be accomplished using the  contacts  framework       if the device has been jailbroken or rooted  an adversary may be able to access the  contact  without the user s knowledge or approval 
attack-pattern--e1c912a9-e305-434b-9172-8a6ce3ec9c4a,['mobile-attack'],"['T1533', 'STA-41']",Data from Local System,adversaries may search local system sources  such as file systems or local databases  to find files of interest and sensitive data prior to exfiltration        access to local system data  which includes information stored by the operating system  often requires escalated privileges  examples of local system data include authentication tokens  the device keyboard cache  wi fi passwords  and photos  on android  adversaries may also attempt to access files from external storage which may require additional storage related permissions 
attack-pattern--e2c2249a-eb82-4614-8dd4-9c514dde65e2,['mobile-attack'],['T1640'],Account Access Removal,adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users  accounts may be deleted  locked  or manipulated  ex  credentials changed  to remove access to accounts 
attack-pattern--e2ea7f6b-8d4f-49c3-819d-660530d12b77,['mobile-attack'],"['T1426', 'APP-12']",System Information Discovery,adversaries may attempt to get detailed information about a device s operating system and hardware  including versions  patches  and architecture  adversaries may use the information from  system information  during automated discovery to shape follow on behaviors  including whether or not to fully infects the target and or attempts specific actions       on android  much of this information is programmatically accessible to applications through the  android_os_build  class   ios is much more restrictive with what information is visible to applications  typically  applications will only be able to query the device model and which version of ios it is running 
attack-pattern--e30cc912-7ea1-4683-9219-543b86cbdec9,pre-attack,['T1442'],Fake Developer Accounts,
attack-pattern--e399430e-30b7-48c5-b70a-f44dc8c175cb,['mobile-attack'],['T1510'],Clipboard Modification,adversaries may abuse clipboard functionality to intercept and replace information in the android device clipboard_ citation  eset clipboard modification february       citation  welivesecurity clipboard modification february       citation  syracuse clipboard modification       malicious applications may monitor the clipboard activity through the clipboardmanager_onprimaryclipchangedlistener interface on android to determine when the clipboard contents have changed_ citation  dr_webb clipboard modification origin  august       citation  dr_webb clipboard modification origin august       listening to clipboard activity  reading the clipboard contents  and modifying the clipboard contents requires no explicit application permissions and can be performed by applications running in the background  however  this behavior has changed with the release of android   _ citation  android    privacy changes   adversaries may use  clipboard  to replace text prior to being pasted  for example  replacing a copied bitcoin wallet address with a wallet address that is under adversarial control_   clipboard  had been seen within the android clipper_c trojan  this sample had been detected by eset in an application distributed through the google play store targeting cryptocurrency wallet numbers_ citation  eset clipboard modification february      
attack-pattern--e3b936a4-6321-4172-9114-038a866362ec,['mobile-attack'],['T1532'],Archive Collected Data,adversaries may compress and or encrypt data that is collected prior to exfiltration  compressing data can help to obfuscate its contents and minimize use of network resources  encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender       both compression and encryption are done prior to exfiltration  and can be performed using a utility  programming library  or custom algorithm 
attack-pattern--e422b6fa-4739-46b9-992e-82f1b350c780,['mobile-attack'],['T1627.001'],Geofencing,adversaries may use a device s geographical location to limit certain malicious behaviors  for example  malware operators may limit the distribution of a second stage payload to certain geographic regions_ citation  lookout esurv    is accomplished by persuading the user to grant the application permission to access location services  the application can then collect  process  and exfiltrate the device s location to perform location based actions  such as ceasing malicious behavior or showing region specific advertisements    one method to accomplish  on android is to use the built in geofencing api to automatically trigger certain behaviors when the device enters or exits a specified radius around a geographical location  similar to  other  methods  this requires that the user has granted the  access_fine_location  and  access_background_location  permissions  the latter is only required if the application targets android     api level     or higher  however  android    introduced additional permission controls that may restrict background location collection based on user permission choices at runtime  these additional controls include  allow only while using the app   which will effectively prohibit background location collection     similarly  on ios  developers can use built in apis to setup and execute geofencing  depending on the use case  the app will either need to call  requestwheninuseauthorization    or  requestalwaysauthorization     depending on when access to the location services is required  similar to android  users also have the option to limit when the application can access the device s location  including one time use and only when the application is running in the foreground      can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within  for example  location data could be used to limit malware spread and or capabilities  which could also potentially evade application analysis environments  ex  malware analysis outside of the target geographic area   other malicious usages could include showing language specific input prompts and or advertisements 
attack-pattern--e4c347e9-fb91-4bc5-83b8-391e389131e2,['mobile-attack'],['T1507'],Network Information Discovery,adversaries may use device sensors to collect information about nearby networks  such as wi fi and bluetooth 
attack-pattern--e8b4e1ec-8e3b-484c-9038-4459b1ed8060,['mobile-attack'],['T1412'],Capture SMS Messages,a malicious application could capture sensitive data sent via sms  including authentication credentials  sms is frequently used to transmit codes used for multi factor authentication_  on android  a malicious application must request and obtain permission  either at app install time or run time  in order to receive sms messages  alternatively  a malicious application could attempt to perform an operating system privilege escalation attack to bypass the permission requirement_  on ios  applications cannot access sms messages in normal operation  so an adversary would need to attempt to perform an operating system privilege escalation attack to potentially be able to access sms messages 
attack-pattern--eb6cf439-1bcb-4d10-bc68-1eed844ed7b3,['mobile-attack'],['T1642'],Endpoint Denial of Service,adversaries may perform endpoint denial of service  dos  attacks to degrade or block the availability of services to users_  on android versions prior to    apps can abuse device administrator access to reset the device lock passcode  preventing the user from unlocking the device  after android    only device or profile owners  e_g  mdms  can reset the device s passcode_ citation  android resetpassword   on ios devices  this technique does not work because mobile device management servers can only remove the screen lock passcode  they cannot set a new passcode  however  on jailbroken devices  malware has been discovered that can lock the user out of the device 
attack-pattern--ec4c4baa-026f-43e8-8f56-58c36f3162dd,['mobile-attack'],['T1644'],Out of Band Data,adversaries may communicate with compromised devices using out of band data streams  this could be done for a variety of reasons  including evading network traffic monitoring  as a backup method of command and control  or for data exfiltration if the device is not connected to any internet providing networks  i_e  cellular or wi fi   several out of band data streams exist  such as sms messages  nfc  and bluetooth       on android  applications can read push notifications to capture content from sms messages  or other out of band data streams  this requires that the user manually grant notification access to the application via the settings menu  however  the application could launch an intent to take the user directly there       on ios  there is no way to programmatically read push notifications 
attack-pattern--ed2c05a1-4f81-4d97-9e1b-aff01c34ae84,['mobile-attack'],['T1521'],Encrypted Channel,adversaries may explicitly employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol  despite the use of a secure algorithm  these implementations may be vulnerable to reverse engineering if necessary secret keys are encoded and or generated within malware samples configuration files 
attack-pattern--ef771e03-e080-43b4-a619-ac6f84899884,['mobile-attack'],"['T1405', 'APP-27']",Exploit TEE Vulnerability,a malicious app or other attack vector could be used to exploit vulnerabilities in code running within the trusted execution environment  tee    the adversary could then obtain privileges held by the tee potentially including the ability to access cryptographic keys or other sensitive data   escalated operating system privileges may be first required in order to have the ability to attack the tee   if not  privileges within the tee can potentially be used to exploit the operating system  
attack-pattern--f05fc151-aa62-47e3-ae57-2d1b23d64bf6,['mobile-attack'],['T1628.001'],Suppress Application Icon,a malicious application could suppress its icon from being displayed to the user in the application launcher  this hides the fact that it is installed  and can make it more difficult for the user to uninstall the application  hiding the application's icon programmatically does not require any special permissions    this behavior has been seen in the bankbot spy banker family of malware    beginning in android     changes were introduced to inhibit malicious applications  ability to hide their icon  if an app is a system app  requests no permissions  or does not have a launcher activity  the application s icon will be fully hidden  further  if the device is fully managed or the application is in a work profile  the icon will be fully hidden  otherwise  a synthesized activity is shown  which is a launcher icon that represents the app s details page in the system settings  if the user clicks the synthesized activity in the launcher  they are taken to the application s details page in the system settings_ citation  android    limitations to hiding app icons  citation  launcherapps getactivitylist 
attack-pattern--f1c3d071-0c24-483d-aca0-e8b8496ce468,['mobile-attack'],"['T1399', 'APP-27']",Modify Trusted Execution Environment,if an adversary can escalate privileges  he or she may be able to use those privileges to place malicious code in the device's trusted execution environment  tee  or other similar isolated execution environment where the code can evade detection  may persist after device resets  and may not be removable by the device user  running code within the tee may provide an adversary with the ability to monitor or tamper with overall device behavior 
attack-pattern--f296fc9c-2ff5-43ee-941e-6b49c438270a,pre-attack,['T1459'],Device Unlock Code Guessing or Brute Force,
attack-pattern--f58cd69a-e548-478b-9248-8a9af881dc34,['mobile-attack'],"['T1466', 'CEL-3']",Downgrade to Insecure Protocols,an adversary could cause the mobile device to use less secure protocols  for example by jamming frequencies used by newer protocols such as lte and only allowing older protocols such as gsm to communicate  use of less secure protocols may make communication easier to eavesdrop upon or manipulate 
attack-pattern--f981d199-2720-467e-9dc9-eea04dbe05cf,['mobile-attack'],['T1472'],Generate Fraudulent Advertising Revenue,an adversary could seek to generate fraudulent advertising revenue from mobile devices  for example by triggering automatic clicks of advertising links without user involvement 
attack-pattern--f9e4f526-ac9d-4df5-8949-833a82a1d2df,pre-attack,['T1473'],Malicious or Vulnerable Built-in Device Functionality,
attack-pattern--fa801609-ca8e-415e-815e-65f3826ff4df,['mobile-attack'],['T1406.001'],Steganography,adversaries may use steganography techniques in order to prevent the detection of hidden information  steganographic techniques can be used to hide data in digital media such as images  audio tracks  video clips  or text files 
attack-pattern--fb3fa94a-3aee-4ab0-b7e7-abdf0a51286d,['mobile-attack'],"['T1449', 'CEL-37']",Exploit SS7 to Redirect Phone Calls/SMS,an adversary could exploit signaling system vulnerabilities to redirect calls or text messages  sms  to a phone number under the attacker's control  the adversary could then act as an adversary in the middle to intercept or manipulate the communication       interception of sms messages could enable adversaries to obtain authentication codes used for multi factor authentication 
attack-pattern--fc53309d-ebd5-4573-9242-57024ebdad4f,['mobile-attack'],['T1628'],Hide Artifacts,adversaries may attempt to hide artifacts associated with their behaviors to evade detection  mobile operating systems have features and developer apis to hide various artifacts  such as an application s launcher icon  these apis have legitimate usages  such as hiding an icon to avoid application drawer clutter when an application does not have a usable interface  adversaries may abuse these features and apis to hide artifacts from the user to evade detection 
attack-pattern--fcb11f06-ce0e-490b-bcc1-04a1623579f0,['mobile-attack'],"['T1632.001', 'STA-7']",Code Signing Policy Modification,adversaries may modify code signing policies to enable execution of applications signed with unofficial or unknown keys  code signing provides a level of authenticity on an app from a developer  guaranteeing that the program has not been tampered with and comes from an official source  security controls can include enforcement mechanisms to ensure that only valid  signed code can be run on a device    mobile devices generally enable these security controls by default  such as preventing the installation of unknown applications on android  adversaries may modify these policies in a number of ways  including  input  or malicious configuration profiles 
attack-pattern--fd211238-f767-4599-8c0d-9dca36624626,['mobile-attack'],['T1637.001'],Domain Generation Algorithms,adversaries may use  domain generation   dgas  to procedurally generate domain names for uses such as command and control communication   or malicious application distribution_ citation  securelist rotexy        dgas increase the difficulty for defenders to block  track  or take over the command and control channel  as there could potentially be thousands of domains that malware can check for instructions 
attack-pattern--fd339382-bfec-4bf0-8d47-1caedc9e7e57,['mobile-attack'],"['T1456', 'CEL-22']",Drive-By Compromise,adversaries may gain access to a system through a user visiting a website over the normal course of browsing  with this technique  the user's web browser is typically targeted for exploitation  but adversaries may also use compromised websites for non exploitation behavior such as acquiring an  application access   multiple ways of delivering exploit code to a browser exist  including     a legitimate website is compromised where adversaries have injected some form of malicious code such as javascript  iframes  and cross site scripting_   malicious ads are paid for and served through legitimate ad providers_   built in web application interfaces are leveraged for the insertion of any other kind of object that can be used to display web content or contain a script that executes on the visiting client  e_g  forum posts  comments  and other user controllable web content _  often the website used by an adversary is one visited by a specific community  such as government  a particular industry  or region  where the goal is to compromise a specific user or set of users based on a shared interest  this kind of targeted attack is referred to a strategic web compromise or watering hole attack  there are several known examples of this occurring_  typical drive by compromise process      a user visits a website that is used to host the adversary controlled content_    scripts automatically execute  typically searching versions of the browser and plugins for a potentially vulnerable version         the user may be required to assist in this process by enabling scripting or active website components and ignoring warning dialog boxes_    upon finding a vulnerable version  exploit code is delivered to the browser_    if exploitation is successful  then it will give the adversary code execution on the user's system unless other protections are in place_       in some cases a second visit to the website after the initial scan is required before exploit code is delivered 
attack-pattern--fd658820-cbba-4c95-8ac9-0fac6b1099e2,['mobile-attack'],['T1508'],Suppress Application Icon,a malicious application could suppress its icon from being displayed to the user in the application launcher to hide the fact that it is installed  and to make it more difficult for the user to uninstall the application  hiding the application's icon programmatically does not require any special permissions_  this behavior has been seen in the bankbot spy banker family of malware 
